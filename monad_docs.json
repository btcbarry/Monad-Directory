{
  "general": {
    "Introduction": {
      "content": "Introduction\nIntroduction\nMonad is a high-performance Ethereum-compatible L1. Monad materially advances the efficient frontier in the tradeoff between decentralization and scalability.\nMonad introduces optimizations in four major areas, resulting in a blockchain with throughput of 10,000 transactions per second (tps):\nMonadBFT\nDeferred Execution\nParallel Execution\nMonadDb\nMonad's improvements address existing bottlenecks while preserving seamless compatibility for application developers (full EVM bytecode compatibility) and users (Ethereum RPC API compatibility). As a result, the rich landscape of Ethereum tooling and applied cryptography research can plug seamlessly into Monad while benefiting from improved throughput and scale:\napplications (any dapp built for Ethereum)\ndeveloper tooling (e.g. Hardhat, Apeworx, Foundry)\nwallets (e.g. Phantom, MetaMask)\nanalytics/indexing (e.g. Etherscan, Dune)\nThe Monad client is built with a focus on performance and is written from scratch in C++ and Rust. The subsequent pages survey the major changes in Monad as well as the interface for users.\nEdit this page",
      "url": "https://docs.monad.xyz/",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Introduction</span><meta content=\"1\" itemprop=\"position\"/></li></ul></nav><div class=\"theme-doc-markdown markdown\"><header><h1>Introduction</h1></header>\n<p>Monad is a high-performance Ethereum-compatible L1. Monad materially advances the efficient frontier in the tradeoff between decentralization and scalability.</p>\n<p>Monad introduces optimizations in four major areas, resulting in a blockchain with throughput of 10,000 transactions per second (tps):</p>\n<ul>\n<li><a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a></li>\n<li><a href=\"/monad-arch/consensus/deferred-execution\">Deferred Execution</a></li>\n<li><a href=\"/monad-arch/execution/parallel-execution\">Parallel Execution</a></li>\n<li><a href=\"/monad-arch/execution/monaddb\">MonadDb</a></li>\n</ul>\n<p>Monad's improvements address existing bottlenecks while preserving seamless compatibility for application developers (full EVM bytecode compatibility) and users (Ethereum RPC API compatibility). As a result, the rich landscape of Ethereum tooling and applied cryptography research can plug seamlessly into Monad while benefiting from improved throughput and scale:</p>\n<ul>\n<li>applications (any dapp built for Ethereum)</li>\n<li>developer tooling (e.g. Hardhat, Apeworx, Foundry)</li>\n<li>wallets (e.g. Phantom, MetaMask)</li>\n<li>analytics/indexing (e.g. Etherscan, Dune)</li>\n</ul>\n<p>The Monad client is built with a focus on performance and is written from scratch in C++ and Rust. The subsequent pages survey the major changes in Monad as well as the interface for users.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/introduction/introduction.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": ""
    }
  },
  "api": {
    "debug_getRawBlock": {
      "content": "debug_getRawBlock\nReturns an RLP-encoded block.\nParams\n(\n1\n)\n1\n.\nblock\n(required)\nQuantity\n(any of)\nstring<hex>\nResult\n(\nString\n)\nstring",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_getrawblock",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_getRawBlock\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_getRawBlock</h1><p class=\"method-summary\"> Returns an RLP-encoded block.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->1<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-stack sl-stack--horizontal sl-stack--3 sl-flex sl-flex-row sl-items-center sl-pb-4\"><div aria-expanded=\"false\" aria-haspopup=\"true\" aria-label=\"Pick a type\" class=\"sl-flex sl-text-base sl-font-mono sl-font-semibold sl-cursor-pointer\" id=\"react-aria-0-2\">Quantity<div class=\"sl-ml-1\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-caret-down sl-icon\" data-icon=\"caret-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 320 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\" fill=\"currentColor\"></path></svg></div></div><div class=\"sl-flex sl-items-center sl-text-base sl-text-muted\">(any of)</div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"b55b1e932485c\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_getrawblock"
    },
    "debug_getRawHeader": {
      "content": "debug_getRawHeader\nReturns an RLP-encoded header.\nParams\n(\n1\n)\n1\n.\nblock\n(required)\nQuantity\n(any of)\nstring<hex>\nResult\n(\nString\n)\nstring",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_getrawheader",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_getRawHeader\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_getRawHeader</h1><p class=\"method-summary\"> Returns an RLP-encoded header.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->1<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-stack sl-stack--horizontal sl-stack--3 sl-flex sl-flex-row sl-items-center sl-pb-4\"><div aria-expanded=\"false\" aria-haspopup=\"true\" aria-label=\"Pick a type\" class=\"sl-flex sl-text-base sl-font-mono sl-font-semibold sl-cursor-pointer\" id=\"react-aria-0-2\">Quantity<div class=\"sl-ml-1\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-caret-down sl-icon\" data-icon=\"caret-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 320 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\" fill=\"currentColor\"></path></svg></div></div><div class=\"sl-flex sl-items-center sl-text-base sl-text-muted\">(any of)</div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"b55b1e932485c\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_getrawheader"
    },
    "debug_getRawReceipts": {
      "content": "debug_getRawReceipts\nReturns an array of EIP-2718 binary-encoded receipts.\nParams\n(\n1\n)\n1\n.\nblock\n(required)\nQuantity\n(any of)\nstring<hex>\nResult\n(\nArray_of_String\n)\narray[string]",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_getrawreceipts",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_getRawReceipts\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_getRawReceipts</h1><p class=\"method-summary\"> Returns an array of EIP-2718 binary-encoded receipts.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->1<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-stack sl-stack--horizontal sl-stack--3 sl-flex sl-flex-row sl-items-center sl-pb-4\"><div aria-expanded=\"false\" aria-haspopup=\"true\" aria-label=\"Pick a type\" class=\"sl-flex sl-text-base sl-font-mono sl-font-semibold sl-cursor-pointer\" id=\"react-aria-0-2\">Quantity<div class=\"sl-ml-1\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-caret-down sl-icon\" data-icon=\"caret-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 320 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\" fill=\"currentColor\"></path></svg></div></div><div class=\"sl-flex sl-items-center sl-text-base sl-text-muted\">(any of)</div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"b55b1e932485c\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->Array_of_String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">array[string]</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_getrawreceipts"
    },
    "debug_getRawTransaction": {
      "content": "debug_getRawTransaction\nReturns an array of EIP-2718 binary-encoded transactions.\nParams\n(\n1\n)\n1\n.\ntx_hash\n(required)\nstring<hex>\nResult\n(\nString\n)\nstring",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_getrawtransaction",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_getRawTransaction\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_getRawTransaction</h1><p class=\"method-summary\"> Returns an array of EIP-2718 binary-encoded transactions.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->1<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->tx_hash<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_getrawtransaction"
    },
    "debug_traceBlockByHash": {
      "content": "debug_traceBlockByHash\nReturns the tracing result by executing all transactions in the block specified by the block hash with a tracer.\nParams\n(\n2\n)\n1\n.\nblock_hash\n(required)\nstring<hex>\n2\n.\ntracer\n(required)\ntracer\nstring\nrequired\nAllowed values\n:\ncallTracer\nprestateTracer\nResult\n(\nMonadDebugTraceBlockResult\n)\nresult\nMonadCallFrame\nrequired\nerror\nstring\nor\nnull\nfrom\nstring<hex>\nrequired\ngas\nstring<hex>\nrequired\ngasUsed\nstring<hex>\nrequired\ninput\nstring<hex>\nrequired\noutput\nstring<hex>\nrequired\nrevertReason\nstring\nor\nnull\nto\nEthAddress\nnull\nany of: EthAddress\ntype\nstring\nrequired\nAllowed values\n:\nCALL\nDELEGATECALL\nCALLCODE\nCREATE\nCREATE2\nSELFDESTRUCT\nSTATICCALL\nvalue\nEthAddress\nnull\nany of: EthAddress\ntxHash\nstring<hex>\nrequired",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_traceblockbyhash",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_traceBlockByHash\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_traceBlockByHash</h1><p class=\"method-summary\"> Returns the tracing result by executing all transactions in the block specified by the block hash with a tracer.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->2<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block_hash<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section><section><h3>2<!-- -->. <!-- -->tracer<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"f4fc6cac9c01b\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-tracer\">tracer</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">callTracer</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">prestateTracer</span></div></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->MonadDebugTraceBlockResult<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e9e5a0a28e0a2\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full sl-cursor-pointer\"><div class=\"sl-flex sl-justify-center sl-w-8 sl--ml-8 sl-pl-3 sl-text-muted\" role=\"button\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-fw fa-sm sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-result\">result</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">MonadCallFrame</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-text-sm sl-ml-px sl-border-l\" data-level=\"1\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"2b879f84d9c6c\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-error\">error</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"f60beb52038b2\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-from\">from</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e44b8a7fd38e1\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas\">gas</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"07f521cc67744\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gasUsed\">gasUsed</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"a652a9361dffa\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-input\">input</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"830ae82473644\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-output\">output</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e014694d839b0\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-revertReason\">revertReason</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"a8d938d3b2a27\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-to\">to</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-4 react-aria-0-6\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-4\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"04453acc272f8\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-type\">type</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">DELEGATECALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALLCODE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE2</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">SELFDESTRUCT</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">STATICCALL</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e1e127fdfe361\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-value\">value</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-10 react-aria-0-12\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-10\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"96adda45533ce\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-txHash\">txHash</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_traceblockbyhash"
    },
    "debug_traceBlockByNumber": {
      "content": "debug_traceBlockByNumber\nReturns the tracing result by executing all transactions in the block specified by the block number with a tracer.\nParams\n(\n2\n)\n1\n.\nblock_number\n(required)\nstring<hex>\n2\n.\ntracer\n(required)\ntracer\nstring\nrequired\nAllowed values\n:\ncallTracer\nprestateTracer\nResult\n(\nMonadDebugTraceBlockResult\n)\nresult\nMonadCallFrame\nrequired\nerror\nstring\nor\nnull\nfrom\nstring<hex>\nrequired\ngas\nstring<hex>\nrequired\ngasUsed\nstring<hex>\nrequired\ninput\nstring<hex>\nrequired\noutput\nstring<hex>\nrequired\nrevertReason\nstring\nor\nnull\nto\nEthAddress\nnull\nany of: EthAddress\ntype\nstring\nrequired\nAllowed values\n:\nCALL\nDELEGATECALL\nCALLCODE\nCREATE\nCREATE2\nSELFDESTRUCT\nSTATICCALL\nvalue\nEthAddress\nnull\nany of: EthAddress\ntxHash\nstring<hex>\nrequired",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_traceblockbynumber",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_traceBlockByNumber\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_traceBlockByNumber</h1><p class=\"method-summary\"> Returns the tracing result by executing all transactions in the block specified by the block number with a tracer.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->2<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block_number<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section><section><h3>2<!-- -->. <!-- -->tracer<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"f4fc6cac9c01b\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-tracer\">tracer</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">callTracer</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">prestateTracer</span></div></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->MonadDebugTraceBlockResult<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e9e5a0a28e0a2\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full sl-cursor-pointer\"><div class=\"sl-flex sl-justify-center sl-w-8 sl--ml-8 sl-pl-3 sl-text-muted\" role=\"button\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-fw fa-sm sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-result\">result</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">MonadCallFrame</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-text-sm sl-ml-px sl-border-l\" data-level=\"1\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"2b879f84d9c6c\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-error\">error</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"f60beb52038b2\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-from\">from</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e44b8a7fd38e1\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas\">gas</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"07f521cc67744\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gasUsed\">gasUsed</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"a652a9361dffa\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-input\">input</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"830ae82473644\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-output\">output</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e014694d839b0\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-revertReason\">revertReason</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"a8d938d3b2a27\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-to\">to</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-4 react-aria-0-6\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-4\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"04453acc272f8\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-type\">type</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">DELEGATECALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALLCODE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE2</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">SELFDESTRUCT</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">STATICCALL</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2 sl-pl-3\" data-id=\"e1e127fdfe361\" data-test=\"schema-row\"><div class=\"sl-w-3 sl-mt-2 sl-mr-3 sl--ml-3 sl-border-t\"></div><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-value\">value</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-10 react-aria-0-12\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-10\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"96adda45533ce\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-txHash\">txHash</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_traceblockbynumber"
    },
    "debug_traceCall": {
      "content": "debug_traceCall\nReturns the tracing result by executing an eth call within the context of the given block execution.\nParams\n(\n3\n)\n1\n.\nblock\n(required)\nQuantity\n(any of)\nstring<hex>\n2\n.\ncall\n(required)\narray of:\ndata\nstring\nor\nnull\nfrom\nEthAddress\nnull\nany of: EthAddress\ngas\nEthAddress\nnull\nany of: EthAddress\ngas_price\nEthAddress\nnull\nany of: EthAddress\nto\nstring<hex>\nrequired\nvalue\nEthAddress\nnull\nany of: EthAddress\n3\n.\ntracer\n(required)\ntracer\nstring\nrequired\nAllowed values\n:\ncallTracer\nprestateTracer\nResult\n(\nString\n)\nstring",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_tracecall",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_traceCall\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_traceCall</h1><p class=\"method-summary\"> Returns the tracing result by executing an eth call within the context of the given block execution.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->3<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-stack sl-stack--horizontal sl-stack--3 sl-flex sl-flex-row sl-items-center sl-pb-4\"><div aria-expanded=\"false\" aria-haspopup=\"true\" aria-label=\"Pick a type\" class=\"sl-flex sl-text-base sl-font-mono sl-font-semibold sl-cursor-pointer\" id=\"react-aria-0-2\">Quantity<div class=\"sl-ml-1\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-caret-down sl-icon\" data-icon=\"caret-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 320 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\" fill=\"currentColor\"></path></svg></div></div><div class=\"sl-flex sl-items-center sl-text-base sl-text-muted\">(any of)</div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"b55b1e932485c\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section><section><h3>2<!-- -->. <!-- -->call<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-base sl-font-mono sl-font-semibold sl-pb-4\">array of:</div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"35c520039c54d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-data\">data</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"d396387a6c84f\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-from\">from</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-4 react-aria-0-6\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-4\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"ba7ab82709473\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas\">gas</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-10 react-aria-0-12\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-10\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"00406b6b5bd3d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas_price\">gas_price</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-16 react-aria-0-18\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-16\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e1c4f412e9863\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-to\">to</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"93b92ed427ad7\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-value\">value</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-22 react-aria-0-24\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-22\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div></div></div></div></div></div></div></section><section><h3>3<!-- -->. <!-- -->tracer<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"f4fc6cac9c01b\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-tracer\">tracer</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">callTracer</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">prestateTracer</span></div></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_tracecall"
    },
    "debug_traceTransaction": {
      "content": "debug_traceTransaction\nReturns all traces of a given transaction.\nParams\n(\n2\n)\n1\n.\ntracer\n(required)\ntracer\nstring\nrequired\nAllowed values\n:\ncallTracer\nprestateTracer\n2\n.\ntx_hash\n(required)\nstring<hex>\nResult\n(\nMonadCallFrame\n)\nerror\nstring\nor\nnull\nfrom\nstring<hex>\nrequired\ngas\nstring<hex>\nrequired\ngasUsed\nstring<hex>\nrequired\ninput\nstring<hex>\nrequired\noutput\nstring<hex>\nrequired\nrevertReason\nstring\nor\nnull\nto\nEthAddress\nnull\nany of: EthAddress\ntype\nstring\nrequired\nAllowed values\n:\nCALL\nDELEGATECALL\nCALLCODE\nCREATE\nCREATE2\nSELFDESTRUCT\nSTATICCALL\nvalue\nEthAddress\nnull\nany of: EthAddress",
      "url": "https://docs.monad.xyz/docs/openrpc/debug_tracetransaction",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"debug_traceTransaction\"><h1 class=\"method-name\" style=\"margin-right:3px\">debug_traceTransaction</h1><p class=\"method-summary\"> Returns all traces of a given transaction.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->2<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->tracer<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"f4fc6cac9c01b\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-tracer\">tracer</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">callTracer</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">prestateTracer</span></div></div></div></div></div></div></div></div></div></div></section><section><h3>2<!-- -->. <!-- -->tx_hash<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->MonadCallFrame<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"6c021f1750652\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-error\">error</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"d396387a6c84f\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-from\">from</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"ba7ab82709473\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas\">gas</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"ce6b4a7274a75\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gasUsed\">gasUsed</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"02aecdd392d4d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-input\">input</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"4035dbc2ba78f\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-output\">output</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e0b3d94726a39\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-revertReason\">revertReason</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e1c4f412e9863\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-to\">to</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-4 react-aria-0-6\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-4\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"4a8da9be0aedc\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-type\">type</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div><div class=\"sl-flex-1 sl-h-px sl-mx-3\"></div><span class=\"sl-ml-2 sl-text-warning\" data-test=\"property-required\">required</span></div><div class=\"sl-stack sl-stack--horizontal sl-stack--2 sl-flex sl-flex-row sl-items-baseline sl-text-muted\" data-test=\"property-validation\"><span>Allowed values<!-- -->:</span><div class=\"sl-flex sl-flex-1 sl-flex-wrap\" style=\"gap:4px\"><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">DELEGATECALL</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CALLCODE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">CREATE2</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">SELFDESTRUCT</span><span class=\"sl-max-w-full sl-break-all sl-px-1 sl-bg-canvas-tint sl-text-muted sl-rounded sl-border\">STATICCALL</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"93b92ed427ad7\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-value\">value</div><div class=\"sl-select sl-relative\"><div aria-hidden=\"true\" style=\"border:0;clip:rect(0 0 0 0);clip-path:inset(50%);height:1px;margin:0 -1px -1px 0;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap\"><input style=\"font-size:16px\" tabindex=\"-1\"/><label><select size=\"2\" tabindex=\"-1\"><option></option><option selected=\"\" value=\"0\">EthAddress</option><option value=\"1\">null</option></select></label></div><div class=\"sl-relative\"><button aria-expanded=\"false\" aria-haspopup=\"listbox\" aria-label=\"Pick a type\" aria-labelledby=\"react-aria-0-10 react-aria-0-12\" class=\"sl-button sl-form-group-border sl-w-full sl-h-sm sl-text-base sl-font-normal sl-px-1.5 sl-bg-transparent sl-rounded sl-border-transparent hover:sl-border-input focus:sl-border-primary active:sl-border-primary sl-border disabled:sl-opacity-60\" id=\"react-aria-0-10\" type=\"button\"><div class=\"sl-flex sl-flex-1 sl-justify-items-start sl-items-center\"><div class=\"sl-pr-1\">any of: EthAddress</div></div><div class=\"sl-text-xs sl--mr-0.5 sl-ml-1\"><div class=\"sl-pt-0.5 sl-pr-0.5\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-chevron-down fa-xs sl-icon\" data-icon=\"chevron-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 448 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M224 416c-8.188 0-16.38-3.125-22.62-9.375l-192-192c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L224 338.8l169.4-169.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-192 192C240.4 412.9 232.2 416 224 416z\" fill=\"currentColor\"></path></svg></div></div></button></div></div></div></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/debug_tracetransaction"
    },
    "eth_blockNumber": {
      "content": "eth_blockNumber\nReturns the number of most recent block.\nParams\n(\n0\n)\nResult\n(\nQuantity\n)\nstring<hex>",
      "url": "https://docs.monad.xyz/docs/openrpc/eth_blocknumber",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"eth_blockNumber\"><h1 class=\"method-name\" style=\"margin-right:3px\">eth_blockNumber</h1><p class=\"method-summary\"> Returns the number of most recent block.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->0<!-- -->)</span></div></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->Quantity<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/eth_blocknumber"
    },
    "eth_call": {
      "content": "eth_call\nExecutes a new message call immediately without creating a transaction on the block chain.\nParams\n(\n2\n)\n1\n.\nblock\n(required)\nQuantity\n(any of)\nstring<hex>\n2\n.\ntransaction\n(required)\naccessList\nany\nchainId\nany\ndata\nany\nfrom\nany\ngas\nany\ninput\nany\nmaxFeePerGas\nstring\nor\nnull\nmaxPriorityFeePerGas\nstring\nor\nnull\nnonce\nany\nto\nany\nvalue\nany\nResult\n(\nString\n)\nstring\nExample\nRequest\nawait\nwindow\n.\nethereum\n.\nrequest\n(\n{\n\"method\"\n:\n\"eth_call\"\n,\n\"params\"\n:\n[\n{\n\"accessList\"\n:\nnull\n,\n\"chainId\"\n:\nnull\n,\n\"data\"\n:\nnull\n,\n\"from\"\n:\nnull\n,\n\"gas\"\n:\nnull\n,\n\"input\"\n:\nnull\n,\n\"maxFeePerGas\"\n:\n\"0x0\"\n,\n\"maxPriorityFeePerGas\"\n:\n\"0x0\"\n,\n\"nonce\"\n:\nnull\n,\n\"to\"\n:\nnull\n,\n\"value\"\n:\nnull\n}\n]\n}\n)\n;\nResult\nnull",
      "url": "https://docs.monad.xyz/docs/openrpc/eth_call",
      "html": "<article><div class=\"method margin-bottom--sm\" id=\"eth_call\"><h1 class=\"method-name\" style=\"margin-right:3px\">eth_call</h1><p class=\"method-summary\"> Executes a new message call immediately without creating a transaction on the block chain.</p><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Params</h2><span>(<!-- -->2<!-- -->)</span></div><section><h3>1<!-- -->. <!-- -->block<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-stack sl-stack--horizontal sl-stack--3 sl-flex sl-flex-row sl-items-center sl-pb-4\"><div aria-expanded=\"false\" aria-haspopup=\"true\" aria-label=\"Pick a type\" class=\"sl-flex sl-text-base sl-font-mono sl-font-semibold sl-cursor-pointer\" id=\"react-aria-0-2\">Quantity<div class=\"sl-ml-1\"><svg aria-hidden=\"true\" class=\"svg-inline--fa fa-caret-down sl-icon\" data-icon=\"caret-down\" data-prefix=\"fas\" focusable=\"false\" role=\"img\" viewbox=\"0 0 320 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\" fill=\"currentColor\"></path></svg></div></div><div class=\"sl-flex sl-items-center sl-text-base sl-text-muted\">(any of)</div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"b55b1e932485c\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string&lt;hex&gt;</span></div></div></div></div></div></div></div></div></div></section><section><h3>2<!-- -->. <!-- -->transaction<span class=\"content-descriptor-summary\"><i><small> (required)</small></i></span></h3><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-text-sm\" data-level=\"0\"><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"5313db77b1c44\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-accessList\">accessList</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bbc3eb38ab611\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-chainId\">chainId</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"35c520039c54d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-data\">data</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"d396387a6c84f\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-from\">from</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"ba7ab82709473\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-gas\">gas</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"02aecdd392d4d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-input\">input</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"f5b53fb0ff41f\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-maxFeePerGas\">maxFeePerGas</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"cfb880045b650\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-maxPriorityFeePerGas\">maxPriorityFeePerGas</div><div class=\"sl-truncate\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span><span class=\"sl-text-muted\"> or </span><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">null</span></div></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"579c9b0001ec7\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-nonce\">nonce</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"e1c4f412e9863\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-to\">to</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"93b92ed427ad7\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><div class=\"sl-font-mono sl-font-semibold sl-mr-2\" data-test=\"property-name-value\">value</div><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">any</span></div></div></div></div></div></div></div></div></div></div></section></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"display:inline;margin-right:3px\">Result</h2><span><i>(<!-- -->String<!-- -->)</i></span></div><div style=\"padding-left:var(--ifm-list-left-padding)\"><div class=\"stoplight\"><div id=\"mosaic-provider-react-aria-0-1\"><div data-overlay-container=\"true\"><div class=\"JsonSchemaViewer\"><div></div><div class=\"sl-flex sl-relative sl-max-w-full sl-py-2\" data-id=\"bf8b96e78f11d\" data-test=\"schema-row\"><div class=\"sl-stack sl-stack--vertical sl-stack--1 sl-flex sl-flex-1 sl-flex-col sl-items-stretch sl-max-w-full\"><div class=\"sl-flex sl-items-center sl-max-w-full\"><div class=\"sl-flex sl-items-baseline sl-text-base\"><span class=\"sl-truncate sl-text-muted\" data-test=\"property-type\">string</span></div></div></div></div></div></div></div></div></div></section><section><div style=\"margin-bottom:var(--ifm-heading-margin-bottom)\"><h2 style=\"margin-right:3px\">Example</h2></div><div><div><div></div><div><div><h3>Request</h3><div><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword control-flow\" style=\"color:#00009f\">await</span><span class=\"token plain\"> </span><span class=\"token dom variable\" style=\"color:#36acaa\">window</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">ethereum</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">request</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"method\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"eth_call\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"params\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"accessList\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"chainId\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"data\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"from\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"gas\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"input\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"maxFeePerGas\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"0x0\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"maxPriorityFeePerGas\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"0x0\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"nonce\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"to\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token string-property property\" style=\"color:#36acaa\">\"value\"</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div></div></div><div><div><h3>Result</h3><div><div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword null nil\" style=\"color:#00009f\">null</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div></div></div></div></div></section></div></article>",
      "path": "docs/openrpc/eth_call"
    }
  },
  "getting-started": {
    "Getting Started": {
      "content": "Getting Started\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Getting Started</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started"
    },
    "Add Monad to Your Wallet": {
      "content": "Add Monad to Your Wallet\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/add-monad-to-wallet/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Add Monad to Your Wallet</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/add-monad-to-wallet/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/add-monad-to-wallet"
    },
    "Add Monad to MetaMask": {
      "content": "Add Monad to MetaMask\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/add-monad-to-wallet/metamask",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Add Monad to MetaMask</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/add-monad-to-wallet/metamask.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/add-monad-to-wallet/metamask"
    },
    "Add Monad to Phantom": {
      "content": "Add Monad to Phantom\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/add-monad-to-wallet/phantom",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Add Monad to Phantom</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/add-monad-to-wallet/phantom.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/add-monad-to-wallet/phantom"
    },
    "Cookbook": {
      "content": "Cookbook\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/deploy-smart-contract/cookbook",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Cookbook</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/deploy-smart-contract/cookbook.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/deploy-smart-contract/cookbook"
    },
    "Deploy a smart contract on Monad using Foundry": {
      "content": "Getting Started\nDeploy a Contract\nFoundry\nOn this page\nDeploy a smart contract on Monad using Foundry\nFoundry\nis a blazing fast, portable and modular toolkit for Ethereum application development written in Rust.\nRequirements\n​\nBefore you begin, you need to install the following tools:\nRust\nCargo\n1. Installing\nfoundryup\n​\nFoundryup is the official installer for the Foundry toolchain.\ncurl -L https://foundry.paradigm.xyz | bash\nThis will install Foundryup. Simply follow the on-screen instructions, and the\nfoundryup\ncommand will become available in your CLI.\n2. Installing\nforge\n,\ncast\n,\nanvil\nand\nchisel\nbinaries\n​\nfoundryup\nnote\nIf you’re using Windows, you’ll need to install and use Git BASH or WSL as your terminal, since Foundryup currently doesn’t support Powershell or Command Prompt (Cmd).\n3. Create a new foundry project\n​\ntip\nYou can use\nfoundry-monad\ntemplate to create a new project.\nFoundry-Monad\nis a Foundry template with Monad configuration. So developers don't have to do the initial configuration in Foundry for Monad network.\nThe below command uses\nfoundry-monad\nto create a new foundry project:\nforge init --template monad-developers/foundry-monad [project_name]\nAlternatively, you can create a default foundry project using the below command:\nforge init [project_name]\n4. Modify Foundry configuration\n​\nnote\nCurrently, the RPC and block explorer are not public; this page will be updated as soon as they are.\nWe appreciate your patience.\nnote\nSkip this step if you are using\nfoundry-monad\ntemplate\nUpdate\nfoundry.toml\nfile to add Monad configuration.\n[profile.default]\nsrc = \"src\"\nout = \"out\"\nlibs = [\"lib\"]\n# Monad Configuration\n# TODO: Add RPC URL and Chain ID\neth-rpc-url=\"MONAD_RPC_URL\"\nchain_id = \"MONAD_CHAIN_ID\"\n# TODO: Add Explorer URL and Chain ID\n[etherscan]\nmonadDevnet = { key = \"DUMMY_VALUE\", url = \"EXPLORER_URL\", chain = MONAD_CHAIN_ID }\n5. Write a smart contract\n​\nYou can write your smart contracts under the\nsrc\nfolder. There is already a\nCounter\ncontract in the project located at\nsrc/Counter.sol\n.\n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\ncontract Counter {\nuint256 public number;\nfunction setNumber(uint256 newNumber) public {\nnumber = newNumber;\n}\nfunction increment() public {\nnumber++;\n}\n}\n6. Compile the smart contract\n​\nforge compile\nCompilation process output can be found in the newly created\nout\ndirectory, which includes Contract ABI and bytecode.\n7. Deploy the smart contract\n​\nnote\nFor deploying contract we recommend not to use a private key associated with real funds. Create a new wallet or have a development-only wallet.\nGet testnet funds\n​\nnote\nCurrently, the faucet is not public; this page will be updated as soon as it is.\nWe appreciate your patience.\nDeploying smart contracts requires testnet funds. Claim testnet funds via a faucet.\nDeploy smart contract\n​\nUsing Keystore (Recommended)\nDirectly using Private Key\nKeystore is a much safer way to using private key with Foundry projects, because keystore encrypts the private key and can later be referenced in any commands that require a private key.\nCreate a new wallet keystore using the below command\ncast wallet import <keystore_name> --interactive\nEnter your wallet’s private key when prompted & provide a password to encrypt it.\nRun the below command to deploy your smart contracts\nforge create src/Counter.sol:Counter --account <keystore_name>\nUse the below command to deploy a smart contract by directly pasting the private key in the terminal.\nforge create --private-key <your_private_key> src/Counter.sol:Counter\nOn successful deployment of smart contract, the output should be similar to the following:\nDeployer: 0xB1aB62fdFC104512F594fCa0EF6ddd93FcEAF67b\nDeployed to: 0x67329e4dc233512f06c16cF362EC3D44Cdc800e0\nTransaction hash: 0xa0a40c299170c9077d321a93ec20c71e91b8aff54dd9fa33f08d6b61f8953ee0\nNext Steps\n​\nnote\nCurrently, the block explorer is not public; this page will be updated as soon as it is.\nWe appreciate your patience.\nCheck out\nhow to verify the deployed smart contract on Monad Explorer\n.\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/deploy-smart-contract/foundry",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/getting-started\" itemprop=\"item\"><span itemprop=\"name\">Getting Started</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/deploy-a-contract\" itemprop=\"item\"><span itemprop=\"name\">Deploy a Contract</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Foundry</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Deploy a smart contract on Monad using Foundry</h1></header><p><a href=\"https://book.getfoundry.sh/\" rel=\"noopener noreferrer\" target=\"_blank\">Foundry</a> is a blazing fast, portable and modular toolkit for Ethereum application development written in Rust.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"requirements\">Requirements<a aria-label=\"Direct link to Requirements\" class=\"hash-link\" href=\"#requirements\" title=\"Direct link to Requirements\">​</a></h2>\n<p>Before you begin, you need to install the following tools:</p>\n<ul>\n<li>Rust</li>\n<li>Cargo</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-installing-foundryup\">1. Installing <code>foundryup</code><a aria-label=\"Direct link to 1-installing-foundryup\" class=\"hash-link\" href=\"#1-installing-foundryup\" title=\"Direct link to 1-installing-foundryup\">​</a></h2>\n<p>Foundryup is the official installer for the Foundry toolchain.</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">curl -L https://foundry.paradigm.xyz | bash</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>This will install Foundryup. Simply follow the on-screen instructions, and the <code>foundryup</code> command will become available in your CLI.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-installing-forge-cast-anvil-and-chisel-binaries\">2. Installing <code>forge</code>, <code>cast</code>, <code>anvil</code> and <code>chisel</code> binaries<a aria-label=\"Direct link to 2-installing-forge-cast-anvil-and-chisel-binaries\" class=\"hash-link\" href=\"#2-installing-forge-cast-anvil-and-chisel-binaries\" title=\"Direct link to 2-installing-forge-cast-anvil-and-chisel-binaries\">​</a></h2>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">foundryup</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>If you’re using Windows, you’ll need to install and use Git BASH or WSL as your terminal, since Foundryup currently doesn’t support Powershell or Command Prompt (Cmd).</p></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"3-create-a-new-foundry-project\">3. Create a new foundry project<a aria-label=\"Direct link to 3. Create a new foundry project\" class=\"hash-link\" href=\"#3-create-a-new-foundry-project\" title=\"Direct link to 3. Create a new foundry project\">​</a></h2>\n<div class=\"theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 12 16\"><path d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\" fill-rule=\"evenodd\"></path></svg></span>tip</div><div class=\"admonitionContent_BuS1\"><p>You can use <code>foundry-monad</code> template to create a new project.</p><p><em><a href=\"https://github.com/monad-developers/foundry-monad\" rel=\"noopener noreferrer\" target=\"_blank\">Foundry-Monad</a> is a Foundry template with Monad configuration. So developers don't have to do the initial configuration in Foundry for Monad network.</em></p></div></div>\n<p>The below command uses <code>foundry-monad</code> to create a new foundry project:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge init --template monad-developers/foundry-monad [project_name]</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Alternatively, you can create a default foundry project using the below command:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge init [project_name]</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"4-modify-foundry-configuration\">4. Modify Foundry configuration<a aria-label=\"Direct link to 4. Modify Foundry configuration\" class=\"hash-link\" href=\"#4-modify-foundry-configuration\" title=\"Direct link to 4. Modify Foundry configuration\">​</a></h2>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the RPC and block explorer are not public; this page will be updated as soon as they are.</p><p>We appreciate your patience.</p></div></div>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Skip this step if you are using <code>foundry-monad</code> template</p></div></div>\n<p>Update <code>foundry.toml</code> file to add Monad configuration.</p>\n<div class=\"language-toml codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-toml codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">[profile.default]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">src = \"src\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">out = \"out\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">libs = [\"lib\"]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># Monad Configuration</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># TODO: Add RPC URL and Chain ID</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">eth-rpc-url=\"MONAD_RPC_URL\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">chain_id = \"MONAD_CHAIN_ID\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># TODO: Add Explorer URL and Chain ID</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">[etherscan]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">monadDevnet = { key = \"DUMMY_VALUE\", url = \"EXPLORER_URL\", chain = MONAD_CHAIN_ID }</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"5-write-a-smart-contract\">5. Write a smart contract<a aria-label=\"Direct link to 5. Write a smart contract\" class=\"hash-link\" href=\"#5-write-a-smart-contract\" title=\"Direct link to 5. Write a smart contract\">​</a></h2>\n<p>You can write your smart contracts under the <code>src</code> folder. There is already a <code>Counter</code> contract in the project located at <code>src/Counter.sol</code>.</p>\n<div class=\"language-solidity codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-solidity codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">// SPDX-License-Identifier: UNLICENSED</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pragma solidity ^0.8.13;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">contract Counter {</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    uint256 public number;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    function setNumber(uint256 newNumber) public {</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        number = newNumber;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    function increment() public {</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        number++;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"6-compile-the-smart-contract\">6. Compile the smart contract<a aria-label=\"Direct link to 6. Compile the smart contract\" class=\"hash-link\" href=\"#6-compile-the-smart-contract\" title=\"Direct link to 6. Compile the smart contract\">​</a></h2>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge compile</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Compilation process output can be found in the newly created <code>out</code> directory, which includes Contract ABI and bytecode.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"7-deploy-the-smart-contract\">7. Deploy the smart contract<a aria-label=\"Direct link to 7. Deploy the smart contract\" class=\"hash-link\" href=\"#7-deploy-the-smart-contract\" title=\"Direct link to 7. Deploy the smart contract\">​</a></h2>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>For deploying contract we recommend not to use a private key associated with real funds. Create a new wallet or have a development-only wallet.</p></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"get-testnet-funds\">Get testnet funds<a aria-label=\"Direct link to Get testnet funds\" class=\"hash-link\" href=\"#get-testnet-funds\" title=\"Direct link to Get testnet funds\">​</a></h3>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the faucet is not public; this page will be updated as soon as it is.</p><p>We appreciate your patience.</p></div></div>\n<!-- -->\n<p>Deploying smart contracts requires testnet funds. Claim testnet funds via a faucet.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"deploy-smart-contract\">Deploy smart contract<a aria-label=\"Direct link to Deploy smart contract\" class=\"hash-link\" href=\"#deploy-smart-contract\" title=\"Direct link to Deploy smart contract\">​</a></h3>\n<div class=\"tabs-container tabList__CuJ\"><ul aria-orientation=\"horizontal\" class=\"tabs\" role=\"tablist\"><li aria-selected=\"true\" class=\"tabs__item tabItem_LNqP tabs__item--active\" role=\"tab\" tabindex=\"0\">Using Keystore (Recommended)</li><li aria-selected=\"false\" class=\"tabs__item tabItem_LNqP\" role=\"tab\" tabindex=\"-1\">Directly using Private Key</li></ul><div class=\"margin-top--md\"><div class=\"tabItem_Ymn6\" role=\"tabpanel\"><p>Keystore is a much safer way to using private key with Foundry projects, because keystore encrypts the private key and can later be referenced in any commands that require a private key.</p><p>Create a new wallet keystore using the below command</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">cast wallet import &lt;keystore_name&gt; --interactive</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div><p>Enter your wallet’s private key when prompted &amp; provide a password to encrypt it.</p><p>Run the below command to deploy your smart contracts</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge create src/Counter.sol:Counter --account &lt;keystore_name&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div><div class=\"tabItem_Ymn6\" hidden=\"\" role=\"tabpanel\"><p>Use the below command to deploy a smart contract by directly pasting the private key in the terminal.</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge create --private-key &lt;your_private_key&gt; src/Counter.sol:Counter</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div></div></div>\n<p>On successful deployment of smart contract, the output should be similar to the following:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Deployer: 0xB1aB62fdFC104512F594fCa0EF6ddd93FcEAF67b</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Deployed to: 0x67329e4dc233512f06c16cF362EC3D44Cdc800e0</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Transaction hash: 0xa0a40c299170c9077d321a93ec20c71e91b8aff54dd9fa33f08d6b61f8953ee0</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"next-steps\">Next Steps<a aria-label=\"Direct link to Next Steps\" class=\"hash-link\" href=\"#next-steps\" title=\"Direct link to Next Steps\">​</a></h3>\n<!-- -->\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the block explorer is not public; this page will be updated as soon as it is.</p><p>We appreciate your patience.</p></div></div>\n<p>Check out <a href=\"/getting-started/verify-smart-contract/foundry\">how to verify the deployed smart contract on Monad Explorer</a>.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/deploy-smart-contract/foundry.mdx\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/deploy-smart-contract/foundry"
    },
    "Deploy a smart contract on Monad using Hardhat": {
      "content": "Getting Started\nDeploy a Contract\nHardhat\nOn this page\nDeploy a smart contract on Monad using Hardhat\nHardhat\nis a comprehensive development environment consisting of different components for editing, compiling, debugging and deploying your smart contracts and dApps.\nRequirements\n​\nBefore you begin, you need to install the following dependencies:\nnpm (recommended >7) or yarn\nNode.js v18.0.0 or later.\nnote\nIf you are on Windows, we strongly recommend using\nWSL 2\nto follow this guide.\n1. Create a sample Hardhat project\n​\nCreate a new empty directory and navigate to it.\nmkdir my-hardhat-project && cd my-hardhat-project\nInitialize a new Hardhat project within the directory:\nnpx hardhat init\nSelect your preferences when prompted by the CLI or use the recommended preferences below.\n✔ What do you want to do? · Create a TypeScript project (with Viem)\n✔ Hardhat project root: · /path/to/my-hardhat-project\n✔ Do you want to add a .gitignore? (Y/n) · y\n✔ Do you want to install this sample project's dependencies with npm (hardhat @nomicfoundation/hardhat-toolbox-viem)? (Y/n) · y\n2. Setting up configuration variables\n​\nA Hardhat project can use configuration variables for user-specific values or for data that shouldn't be included in the code repository.\nnote\nCurrently, the RPC is not public; this page will be updated as soon as it is.\nWe appreciate your patience.\nTo set a configuration variable you can use the following command:\nnpx hardhat vars set <variable_name>\nFor example, to set the\nMONAD_RPC_URL\nvariable, you would enter the following command:\nnpx hardhat vars set MONAD_RPC_URL\nThen enter the desired value for this variable at the prompt:\nEnter value: ********************************\nSimilarly you can set up the\nPRIVATE_KEY\nand\nMONAD_CHAIN_ID\nvariables.\nwarning\nConfiguration variables are stored in plain text on your disk. Avoid using this feature for data you wouldn’t normally save in an unencrypted file.\nRun\nnpx hardhat vars path\nto find the storage's file location.\n3. Update your\nhardhat.config.ts\nfile to include the\nmonadDevnet\nconfiguration\n​\nimport\ntype\n{\nHardhatUserConfig\n}\nfrom\n\"hardhat/config\"\n;\nimport\n\"@nomicfoundation/hardhat-toolbox-viem\"\n;\nimport\n{\nvars\n}\nfrom\n\"hardhat/config\"\n;\nconst\nconfig\n:\nHardhatUserConfig\n=\n{\nsolidity\n:\n\"0.8.27\"\n,\n...\nnetworks\n:\n{\n...\nmonadDevnet\n:\n{\nurl\n:\nvars\n.\nget\n(\n\"MONAD_RPC_URL\"\n)\n,\naccounts\n:\n[\nvars\n.\nget\n(\n\"PRIVATE_KEY\"\n)\n]\n,\nchainId\n:\nNumber\n(\nvars\n.\nget\n(\n\"MONAD_CHAIN_ID\"\n)\n)\n,\n}\n,\n...\n}\n,\n}\n;\nexport\ndefault\nconfig\n;\n4. Write a smart contract\n​\nYou can create new contracts in the\ncontracts\ndirectory.\nIn the below example I created\nGMonad.sol\n:\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\ncontract GMonad {\nfunction sayGmonad() public pure returns (string memory) {\nreturn \"gmonad\";\n}\n}\n5. Compile the smart contract\n​\nnpx hardhat compile\nOn successful compilation of smart contract, the output should be similar to the following:\nCompiled 2 Solidity file successfully (evm target: paris).\nnote\n2 files are compiled if you did not delete the default\nLock.sol\ncontract from Hardhat.\n6. Deploy the smart contract\n​\nTo deploy your contracts, you can use\nHardhat Ignition\n, the declarative deployment system.\nYou can deploy the\nGMonad\ncontract from the sample project by using its accompanying Ignition module.\nCreating a Hardhat Ignition module\n​\nCreate a file named\nGMonad.ts\nin the\nignition/modules\ndirectory, with the following code:\nimport\n{\nbuildModule\n}\nfrom\n\"@nomicfoundation/hardhat-ignition/modules\"\n;\nconst\nGMonadModule\n=\nbuildModule\n(\n\"GMonadModule\"\n,\n(\nm\n)\n=>\n{\nconst\ngmonad\n=\nm\n.\ncontract\n(\n\"GMonad\"\n)\n;\nreturn\n{\ngmonad\n}\n;\n}\n)\n;\nmodule\n.\nexports\n=\nGMonadModule\n;\nNow you can use the following command to deploy the contract.\nDeploying the smart contract\n​\nnpx hardhat ignition deploy ./ignition/modules/GMonad.ts --network monadDevnet\nChoose yes when prompted to Confirm\n✔ Confirm deploy to network monadDevnet (<chain_id>)? … yes\nOn successful deployment of smart contract, the output should be similar to the following:\n✔ Confirm deploy to network monadDevnet (<chain_id>)? … yes\nHardhat Ignition 🚀\nDeploying [ GMonadModule ]\nBatch #1\nExecuted GMonadModule#GMonad\n[ GMonadModule ] successfully deployed 🚀\nDeployed Addresses\nGMonadModule#GMonad - <contract_address>\nNext Steps\n​\nCheck out\nhow to verify the deployed smart contract on Monad Explorer\n.\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/deploy-smart-contract/hardhat",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/getting-started\" itemprop=\"item\"><span itemprop=\"name\">Getting Started</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/deploy-a-contract\" itemprop=\"item\"><span itemprop=\"name\">Deploy a Contract</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Hardhat</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Deploy a smart contract on Monad using Hardhat</h1></header><p><a href=\"https://hardhat.org/docs\" rel=\"noopener noreferrer\" target=\"_blank\">Hardhat</a> is a comprehensive development environment consisting of different components for editing, compiling, debugging and deploying your smart contracts and dApps.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"requirements\">Requirements<a aria-label=\"Direct link to Requirements\" class=\"hash-link\" href=\"#requirements\" title=\"Direct link to Requirements\">​</a></h2>\n<p>Before you begin, you need to install the following dependencies:</p>\n<ul>\n<li>npm (recommended &gt;7) or yarn</li>\n<li>Node.js v18.0.0 or later.</li>\n</ul>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>If you are on Windows, we strongly recommend using <a href=\"https://learn.microsoft.com/en-us/windows/wsl/about\" rel=\"noopener noreferrer\" target=\"_blank\">WSL 2</a> to follow this guide.</p></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-create-a-sample-hardhat-project\">1. Create a sample Hardhat project<a aria-label=\"Direct link to 1. Create a sample Hardhat project\" class=\"hash-link\" href=\"#1-create-a-sample-hardhat-project\" title=\"Direct link to 1. Create a sample Hardhat project\">​</a></h2>\n<p>Create a new empty directory and navigate to it.</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">mkdir my-hardhat-project &amp;&amp; cd my-hardhat-project</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Initialize a new Hardhat project within the directory:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat init</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Select your preferences when prompted by the CLI or use the recommended preferences below.</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ What do you want to do? · Create a TypeScript project (with Viem)</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ Hardhat project root: · /path/to/my-hardhat-project</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ Do you want to add a .gitignore? (Y/n) · y</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ Do you want to install this sample project's dependencies with npm (hardhat @nomicfoundation/hardhat-toolbox-viem)? (Y/n) · y</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-setting-up-configuration-variables\">2. Setting up configuration variables<a aria-label=\"Direct link to 2. Setting up configuration variables\" class=\"hash-link\" href=\"#2-setting-up-configuration-variables\" title=\"Direct link to 2. Setting up configuration variables\">​</a></h2>\n<p>A Hardhat project can use configuration variables for user-specific values or for data that shouldn't be included in the code repository.</p>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the RPC is not public; this page will be updated as soon as it is.</p><p>We appreciate your patience.</p></div></div>\n<!-- -->\n<p>To set a configuration variable you can use the following command:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat vars set &lt;variable_name&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>For example, to set the <code>MONAD_RPC_URL</code> variable, you would enter the following command:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat vars set MONAD_RPC_URL</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Then enter the desired value for this variable at the prompt:</p>\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Enter value: ********************************</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Similarly you can set up the <code>PRIVATE_KEY</code> and <code>MONAD_CHAIN_ID</code> variables.</p>\n<div class=\"theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 16 16\"><path d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\" fill-rule=\"evenodd\"></path></svg></span>warning</div><div class=\"admonitionContent_BuS1\"><p>Configuration variables are stored in plain text on your disk. Avoid using this feature for data you wouldn’t normally save in an unencrypted file.\nRun <code>npx hardhat vars path</code> to find the storage's file location.</p></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"3-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\">3. Update your <code>hardhat.config.ts</code> file to include the <code>monadDevnet</code> configuration<a aria-label=\"Direct link to 3-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\" class=\"hash-link\" href=\"#3-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\" title=\"Direct link to 3-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\">​</a></h2>\n<div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">type</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> HardhatUserConfig </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"hardhat/config\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"@nomicfoundation/hardhat-toolbox-viem\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> vars </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"hardhat/config\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> config</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> HardhatUserConfig </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    solidity</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"0.8.27\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    networks</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        monadDevnet</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            url</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> vars</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MONAD_RPC_URL\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            accounts</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">vars</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"PRIVATE_KEY\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            chainId</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">Number</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vars</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MONAD_CHAIN_ID\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">default</span><span class=\"token plain\"> config</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"4-write-a-smart-contract\">4. Write a smart contract<a aria-label=\"Direct link to 4. Write a smart contract\" class=\"hash-link\" href=\"#4-write-a-smart-contract\" title=\"Direct link to 4. Write a smart contract\">​</a></h2>\n<p>You can create new contracts in the <code>contracts</code> directory.</p>\n<p>In the below example I created <code>GMonad.sol</code>:</p>\n<div class=\"language-sol codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sol codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">// SPDX-License-Identifier: MIT</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">pragma solidity ^0.8.17;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">contract GMonad {</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    function sayGmonad() public pure returns (string memory) {</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        return \"gmonad\";</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    }</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"5-compile-the-smart-contract\">5. Compile the smart contract<a aria-label=\"Direct link to 5. Compile the smart contract\" class=\"hash-link\" href=\"#5-compile-the-smart-contract\" title=\"Direct link to 5. Compile the smart contract\">​</a></h2>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat compile</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>On successful compilation of smart contract, the output should be similar to the following:</p>\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Compiled 2 Solidity file successfully (evm target: paris).</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>2 files are compiled if you did not delete the default <code>Lock.sol</code> contract from Hardhat.</p></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"6-deploy-the-smart-contract\">6. Deploy the smart contract<a aria-label=\"Direct link to 6. Deploy the smart contract\" class=\"hash-link\" href=\"#6-deploy-the-smart-contract\" title=\"Direct link to 6. Deploy the smart contract\">​</a></h2>\n<p>To deploy your contracts, you can use <a href=\"https://hardhat.org/ignition/docs/getting-started#overview\" rel=\"noopener noreferrer\" target=\"_blank\">Hardhat Ignition</a>, the declarative deployment system.</p>\n<p>You can deploy the <code>GMonad</code> contract from the sample project by using its accompanying Ignition module.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"creating-a-hardhat-ignition-module\">Creating a Hardhat Ignition module<a aria-label=\"Direct link to Creating a Hardhat Ignition module\" class=\"hash-link\" href=\"#creating-a-hardhat-ignition-module\" title=\"Direct link to Creating a Hardhat Ignition module\">​</a></h3>\n<p>Create a file named <code>GMonad.ts</code> in the <code>ignition/modules</code> directory, with the following code:</p>\n<div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> buildModule </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"@nomicfoundation/hardhat-ignition/modules\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> GMonadModule </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">buildModule</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"GMonadModule\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">m</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> gmonad </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> m</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">contract</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"GMonad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> gmonad </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">exports </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> GMonadModule</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Now you can use the following command to deploy the contract.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"deploying-the-smart-contract\">Deploying the smart contract<a aria-label=\"Direct link to Deploying the smart contract\" class=\"hash-link\" href=\"#deploying-the-smart-contract\" title=\"Direct link to Deploying the smart contract\">​</a></h3>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat ignition deploy ./ignition/modules/GMonad.ts --network monadDevnet</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Choose yes when prompted to Confirm</p>\n<!-- -->\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ Confirm deploy to network monadDevnet (&lt;chain_id&gt;)? … yes</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>On successful deployment of smart contract, the output should be similar to the following:</p>\n<!-- -->\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">✔ Confirm deploy to network monadDevnet (&lt;chain_id&gt;)? … yes</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Hardhat Ignition 🚀</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Deploying [ GMonadModule ]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Batch #1</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  Executed GMonadModule#GMonad</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">[ GMonadModule ] successfully deployed 🚀</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Deployed Addresses</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">GMonadModule#GMonad - &lt;contract_address&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"next-steps\">Next Steps<a aria-label=\"Direct link to Next Steps\" class=\"hash-link\" href=\"#next-steps\" title=\"Direct link to Next Steps\">​</a></h2>\n<!-- -->\n<p>Check out <a href=\"/getting-started/verify-smart-contract/hardhat\">how to verify the deployed smart contract on Monad Explorer</a>.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/deploy-smart-contract/hardhat.mdx\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/deploy-smart-contract/hardhat"
    },
    "Thirdweb": {
      "content": "Thirdweb\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/deploy-smart-contract/thirdweb",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Thirdweb</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/deploy-smart-contract/thirdweb.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/deploy-smart-contract/thirdweb"
    },
    "Differences between Monad and Ethereum": {
      "content": "Differences between Monad and Ethereum\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/differences",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Differences between Monad and Ethereum</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/differences.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/differences"
    },
    "Faucet": {
      "content": "On this page\nFaucet\nMonad Faucet\n​\nPhantom Faucet\n​\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/faucet",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Faucet</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"monad-faucet\">Monad Faucet<a aria-label=\"Direct link to Monad Faucet\" class=\"hash-link\" href=\"#monad-faucet\" title=\"Direct link to Monad Faucet\">​</a></h2>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"phantom-faucet\">Phantom Faucet<a aria-label=\"Direct link to Phantom Faucet\" class=\"hash-link\" href=\"#phantom-faucet\" title=\"Direct link to Phantom Faucet\">​</a></h2></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/faucet.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/faucet"
    },
    "Network Information": {
      "content": "On this page\nNetwork Information\nNetwork Specification\n​\nDummy Text\nBlock Explorers\n​\nDummy Text\nFaucets\n​\nDummy Text\nImportant Contracts\n​\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/network-information",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Network Information</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"network-specification\">Network Specification<a aria-label=\"Direct link to Network Specification\" class=\"hash-link\" href=\"#network-specification\" title=\"Direct link to Network Specification\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"block-explorers\">Block Explorers<a aria-label=\"Direct link to Block Explorers\" class=\"hash-link\" href=\"#block-explorers\" title=\"Direct link to Block Explorers\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"faucets\">Faucets<a aria-label=\"Direct link to Faucets\" class=\"hash-link\" href=\"#faucets\" title=\"Direct link to Faucets\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"important-contracts\">Important Contracts<a aria-label=\"Direct link to Important Contracts\" class=\"hash-link\" href=\"#important-contracts\" title=\"Direct link to Important Contracts\">​</a></h2>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/network-information.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/network-information"
    },
    "Verify a smart contract on Monad Explorer using Foundry": {
      "content": "Getting Started\nVerify a Contract\nFoundry\nOn this page\nVerify a smart contract on Monad Explorer using Foundry\nnote\nCurrently, the RPC and block explorer are not public; this page will be updated as soon as they are.\nWe appreciate your patience.\nFoundry Monad template (Recommended)\nDefault Foundry Project\nIf you are using\nfoundry-monad\ntemplate, you can simply run the below command:\nforge verify-contract <contract_address> <contract_name>\nExample:\nforge verify-contract 0x195B9401D1BF64D4D4FFbEecD10aE8c41bEBA453 src/Counter.sol:Counter\ntip\nIf you use\nfoundry-monad\nyou can skip the configuration step\n1. Update\nfoundry.toml\nwith Monad Configuration\n​\n[profile.default]\nsrc = \"src\"\nout = \"out\"\nlibs = [\"lib\"]\n# Monad Configuration\n# TODO: Add RPC URL and Chain ID\neth-rpc-url=\"MONAD_RPC_URL\"\nchain_id = \"MONAD_CHAIN_ID\"\n# TODO: Add Explorer URL and Chain ID\n[etherscan]\nmonadDevnet = { key = \"DUMMY_VALUE\", url = \"EXPLORER_URL\", chain = MONAD_CHAIN_ID }\n2. Verify the contract using the command below:\n​\nforge verify-contract <contract_address> <contract_name>\nExample:\nforge verify-contract 0x195B9401D1BF64D4D4FFbEecD10aE8c41bEBA453 src/Counter.sol:Counter\nOn successful verification of smart contract, you should get a similar output in your terminal:\nStart verifying contract `0x1355a4f7829161a4d27BDb8970D32b89ef89A1Be`\nSubmitting verification for [src/Counter.sol:Counter] 0x1355a4f7829161a4d27BDb8970D32b89ef89A1Be.\nSubmitted contract for verification:\nResponse: `OK`\nGUID: `1355a4f7829161a4d27bdb8970d32b89ef89a1be67448d78`\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/verify-smart-contract/foundry",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/getting-started\" itemprop=\"item\"><span itemprop=\"name\">Getting Started</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/verify-a-contract\" itemprop=\"item\"><span itemprop=\"name\">Verify a Contract</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Foundry</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Verify a smart contract on Monad Explorer using Foundry</h1></header><div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the RPC and block explorer are not public; this page will be updated as soon as they are.</p><p>We appreciate your patience.</p></div></div>\n<div class=\"tabs-container tabList__CuJ\"><ul aria-orientation=\"horizontal\" class=\"tabs\" role=\"tablist\"><li aria-selected=\"true\" class=\"tabs__item tabItem_LNqP tabs__item--active\" role=\"tab\" tabindex=\"0\">Foundry Monad template (Recommended)</li><li aria-selected=\"false\" class=\"tabs__item tabItem_LNqP\" role=\"tab\" tabindex=\"-1\">Default Foundry Project</li></ul><div class=\"margin-top--md\"><div class=\"tabItem_Ymn6\" role=\"tabpanel\"><p>If you are using <a href=\"https://github.com/monad-developers/foundry-monad\" rel=\"noopener noreferrer\" target=\"_blank\"><code>foundry-monad</code></a> template, you can simply run the below command:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge verify-contract &lt;contract_address&gt; &lt;contract_name&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div><p>Example:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge verify-contract 0x195B9401D1BF64D4D4FFbEecD10aE8c41bEBA453 src/Counter.sol:Counter</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div><div class=\"tabItem_Ymn6\" hidden=\"\" role=\"tabpanel\"><div class=\"theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 12 16\"><path d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\" fill-rule=\"evenodd\"></path></svg></span>tip</div><div class=\"admonitionContent_BuS1\"><p>If you use <a href=\"https://github.com/monad-developers/foundry-monad\" rel=\"noopener noreferrer\" target=\"_blank\"><code>foundry-monad</code></a> you can skip the configuration step</p></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-update-foundrytoml-with-monad-configuration\">1. Update <code>foundry.toml</code> with Monad Configuration<a aria-label=\"Direct link to 1-update-foundrytoml-with-monad-configuration\" class=\"hash-link\" href=\"#1-update-foundrytoml-with-monad-configuration\" title=\"Direct link to 1-update-foundrytoml-with-monad-configuration\">​</a></h2><div class=\"language-toml codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-toml codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">[profile.default]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">src = \"src\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">out = \"out\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">libs = [\"lib\"]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># Monad Configuration</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># TODO: Add RPC URL and Chain ID</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">eth-rpc-url=\"MONAD_RPC_URL\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">chain_id = \"MONAD_CHAIN_ID\"</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"># TODO: Add Explorer URL and Chain ID</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">[etherscan]</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">monadDevnet = { key = \"DUMMY_VALUE\", url = \"EXPLORER_URL\", chain = MONAD_CHAIN_ID }</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div><h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-verify-the-contract-using-the-command-below\">2. Verify the contract using the command below:<a aria-label=\"Direct link to 2. Verify the contract using the command below:\" class=\"hash-link\" href=\"#2-verify-the-contract-using-the-command-below\" title=\"Direct link to 2. Verify the contract using the command below:\">​</a></h2><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge verify-contract &lt;contract_address&gt; &lt;contract_name&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div><p>Example:</p><div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">forge verify-contract 0x195B9401D1BF64D4D4FFbEecD10aE8c41bEBA453 src/Counter.sol:Counter</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div></div></div></div>\n<p>On successful verification of smart contract, you should get a similar output in your terminal:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Start verifying contract `0x1355a4f7829161a4d27BDb8970D32b89ef89A1Be`</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Submitting verification for [src/Counter.sol:Counter] 0x1355a4f7829161a4d27BDb8970D32b89ef89A1Be.</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Submitted contract for verification:</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    Response: `OK`</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    GUID: `1355a4f7829161a4d27bdb8970d32b89ef89a1be67448d78`</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n</div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/verify-smart-contract/foundry.mdx\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/verify-smart-contract/foundry"
    },
    "Verify a smart contract on Monad Explorer using Hardhat": {
      "content": "Getting Started\nVerify a Contract\nHardhat\nOn this page\nVerify a smart contract on Monad Explorer using Hardhat\nOnce your contract is deployed to a live network, the next step is to verify its source code on the block explorer.\nVerifying a contract means uploading its source code, along with the settings used to compile the code, to a\nrepository (typically maintained by a block explorer). This allows anyone to compile it and compare the generated\nbytecode with what is deployed on chain. Doing this is extremely important in an open platform like Monad.\nnote\nCurrently, the block explorer is not public; this page will be updated as soon as it is.\nWe appreciate your patience.\nIn this guide we'll explain how to do this in the Monad explorer.\n1. Setting up configuration variables\n​\nA Hardhat project can use configuration variables for user-specific values or for data that shouldn't be included in the code repository.\nTo set a configuration variable you can use the following command:\nnpx hardhat vars set <variable_name>\nFor example, to set the\nMONAD_RPC_URL\nvariable, you would enter the following command:\nnpx hardhat vars set MONAD_EXPLORER_URL\nnote\nMake sure you don't include the\n/api\npart when setting\nMONAD_EXPLORER_URL\nconfiguration variable.\nThen enter the desired value for this variable at the prompt:\nEnter value: ********************************\nSimilarly you can set up the\nMONAD_CHAIN_ID\nvariable.\nwarning\nConfiguration variables are stored in plain text on your disk. Avoid using this feature for data you wouldn’t normally save in an unencrypted file.\nRun\nnpx hardhat vars path\nto find the storage's file location.\n2. Update your\nhardhat.config.ts\nfile to include the\nmonadDevnet\nconfiguration\n​\nimport\ntype\n{\nHardhatUserConfig\n}\nfrom\n\"hardhat/config\"\n;\nimport\n\"@nomicfoundation/hardhat-toolbox-viem\"\n;\nimport\n{\nvars\n}\nfrom\n\"hardhat/config\"\n;\nconst\nconfig\n:\nHardhatUserConfig\n=\n{\nsolidity\n:\n\"0.8.27\"\n,\n...\netherscan\n:\n{\napiKey\n:\n`\nDUMMY_VALUE_FOR_BLOCKSCOUT\n`\n,\ncustomChains\n:\n[\n{\nnetwork\n:\n\"monadDevnet\"\n,\nchainId\n:\nNumber\n(\nvars\n.\nget\n(\n\"MONAD_CHAIN_ID\"\n)\n)\n,\nurls\n:\n{\nbrowserURL\n:\nvars\n.\nget\n(\n\"MONAD_EXPLORER_URL\"\n)\n,\napiURL\n:\n`\n${\nvars\n.\nget\n(\n\"MONAD_EXPLORER_URL\"\n)\n}\n/api\n`\n,\n}\n,\n}\n,\n...\n]\n,\n}\n,\n}\n;\nexport\ndefault\nconfig\n;\nNote: currently the Monad explorer is Blockscout-based and does not require an API key.\nWe use a dummy placeholder value\nDUMMY_VALUE_FOR_BLOCKSCOUT\nto avoid errors.\n3. Verify the smart contract\n​\nUse the following command to verify the smart contract:\nnpx hardhat verify <contract_address> --network monadDevnet\nOn successful verification of smart contract, the output should be similar to the following:\nnote\nCurrently, the block explorer is not public; this page will be updated as soon as it is.\nWe appreciate your patience.\nSuccessfully submitted source code for contract\ncontracts/GMonad.sol:GMonad at <contract_address>\nfor verification on the block explorer. Waiting for verification result...\nSuccessfully verified contract GMonad on the block explorer.\n<block_explorer_url>/address/0x690BE9B15b84c6487965d1cbf3372A9FB07A6eE1#code\nUsing the link in the output above, you can view the verified smart contract on the explorer.\nEdit this page",
      "url": "https://docs.monad.xyz/getting-started/verify-smart-contract/hardhat",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/getting-started\" itemprop=\"item\"><span itemprop=\"name\">Getting Started</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/verify-a-contract\" itemprop=\"item\"><span itemprop=\"name\">Verify a Contract</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Hardhat</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Verify a smart contract on Monad Explorer using Hardhat</h1></header><p>Once your contract is deployed to a live network, the next step is to verify its source code on the block explorer.</p>\n<p>Verifying a contract means uploading its source code, along with the settings used to compile the code, to a\nrepository (typically maintained by a block explorer). This allows anyone to compile it and compare the generated\nbytecode with what is deployed on chain. Doing this is extremely important in an open platform like Monad.</p>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the block explorer is not public; this page will be updated as soon as it is.</p><p>We appreciate your patience.</p></div></div>\n<!-- -->\n<p>In this guide we'll explain how to do this in the Monad explorer.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"1-setting-up-configuration-variables\">1. Setting up configuration variables<a aria-label=\"Direct link to 1. Setting up configuration variables\" class=\"hash-link\" href=\"#1-setting-up-configuration-variables\" title=\"Direct link to 1. Setting up configuration variables\">​</a></h2>\n<p>A Hardhat project can use configuration variables for user-specific values or for data that shouldn't be included in the code repository.</p>\n<p>To set a configuration variable you can use the following command:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat vars set &lt;variable_name&gt;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>For example, to set the <code>MONAD_RPC_URL</code> variable, you would enter the following command:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat vars set MONAD_EXPLORER_URL</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Make sure you don't include the <code>/api</code> part when setting <code>MONAD_EXPLORER_URL</code> configuration variable.</p></div></div>\n<p>Then enter the desired value for this variable at the prompt:</p>\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Enter value: ********************************</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Similarly you can set up the <code>MONAD_CHAIN_ID</code> variable.</p>\n<div class=\"theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 16 16\"><path d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\" fill-rule=\"evenodd\"></path></svg></span>warning</div><div class=\"admonitionContent_BuS1\"><p>Configuration variables are stored in plain text on your disk. Avoid using this feature for data you wouldn’t normally save in an unencrypted file.\nRun <code>npx hardhat vars path</code> to find the storage's file location.</p></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"2-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\">2. Update your <code>hardhat.config.ts</code> file to include the <code>monadDevnet</code> configuration<a aria-label=\"Direct link to 2-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\" class=\"hash-link\" href=\"#2-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\" title=\"Direct link to 2-update-your-hardhatconfigts-file-to-include-the-monaddevnet-configuration\">​</a></h2>\n<div class=\"language-ts codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-ts codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">type</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> HardhatUserConfig </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"hardhat/config\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"@nomicfoundation/hardhat-toolbox-viem\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> vars </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"hardhat/config\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> config</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> HardhatUserConfig </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    solidity</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"0.8.27\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    etherscan</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        apiKey</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\">DUMMY_VALUE_FOR_BLOCKSCOUT</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        customChains</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                network</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"monadDevnet\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                chainId</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">Number</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vars</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MONAD_CHAIN_ID\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                urls</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    browserURL</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> vars</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MONAD_EXPLORER_URL\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    apiURL</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">vars</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation function\" style=\"color:#d73a49\">get</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">(</span><span class=\"token template-string interpolation string\" style=\"color:#e3116c\">\"MONAD_EXPLORER_URL\"</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">)</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\">/api</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token operator\" style=\"color:#393A34\">...</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">export</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">default</span><span class=\"token plain\"> config</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Note: currently the Monad explorer is Blockscout-based and does not require an API key.\nWe use a dummy placeholder value <code>DUMMY_VALUE_FOR_BLOCKSCOUT</code> to avoid errors.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"3-verify-the-smart-contract\">3. Verify the smart contract<a aria-label=\"Direct link to 3. Verify the smart contract\" class=\"hash-link\" href=\"#3-verify-the-smart-contract\" title=\"Direct link to 3. Verify the smart contract\">​</a></h2>\n<p>Use the following command to verify the smart contract:</p>\n<div class=\"language-sh codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-sh codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">npx hardhat verify &lt;contract_address&gt; --network monadDevnet</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>On successful verification of smart contract, the output should be similar to the following:</p>\n<!-- -->\n<div class=\"theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewbox=\"0 0 14 16\"><path d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\" fill-rule=\"evenodd\"></path></svg></span>note</div><div class=\"admonitionContent_BuS1\"><p>Currently, the block explorer is not public; this page will be updated as soon as it is.</p><p>We appreciate your patience.</p></div></div>\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Successfully submitted source code for contract</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">contracts/GMonad.sol:GMonad at &lt;contract_address&gt;</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">for verification on the block explorer. Waiting for verification result...</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">Successfully verified contract GMonad on the block explorer.</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">&lt;block_explorer_url&gt;/address/0x690BE9B15b84c6487965d1cbf3372A9FB07A6eE1#code</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>Using the link in the output above, you can view the verified smart contract on the explorer.</p>\n</div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/getting-started/verify-smart-contract/hardhat.mdx\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "getting-started/verify-smart-contract/hardhat"
    }
  },
  "guides": {
    "Guides": {
      "content": "Guides\nEdit this page",
      "url": "https://docs.monad.xyz/guides/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Guides</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/guides/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "guides"
    }
  },
  "introduction": {
    "Monad for Developers": {
      "content": "Introduction\nMonad for Developers\nOn this page\nMonad for Developers\nMonad is an Ethereum-compatible Layer-1 blockchain with 10,000 tps of throughput, 1-second block times, and single-slot finality.\nMonad's implementation of the Ethereum Virtual Machine complies with the\nShanghai fork\n; simulation of historical Ethereum transactions with the Monad execution environment produces identical outcomes. Monad also offers full Ethereum RPC compatibility so that users can interact with Monad using familiar tools like Etherscan, Phantom, or MetaMask.\nMonad accomplishes these performance improvements through the introduction of several major innovations:\nMonadBFT\n(pipelined HotStuff consensus with additional research improvements),\nDeferred Execution\n(pipelining between consensus and execution to significantly increase the execution budget)\nParallel Execution\nMonadDb\n(high-performance state backend)\nAlthough Monad features parallel execution and pipelining, it's important to note that blocks in Monad are linear, and transactions are linearly ordered within each block.\nTransaction format\n​\nAddress space\nmatches Ethereum\n20-byte addresses using ECDSA\nTransaction format\nmatches Ethereum\ncomplies with\nEIP-2718\n, encoded with\nRLP\n.  Access lists (\nEIP-2930\n) are supported but not required.\nWallet compatibility\nMonad is compatible with standard Ethereum wallets such as Phantom or MetaMask. The only change required is to alter the RPC URL and ChainId.\nSmart contracts\n​\nMonad supports EVM bytecode, and is bytecode-equivalent to Ethereum. All\nopcodes\n(as of the Shanghai fork) are supported.\nConsensus\n​\nSybil resistance mechanism\nProof-of-Stake (PoS)\nDelegation\nAllowed (in-protocol)\nConsensus mechanism and pipelining\nMonadBFT\nis a leader-based algorithm for reaching agreement about transaction order and inclusion under partially synchronous conditions. Broadly characterized, it is a derivative of HotStuff with additional research improvements.\nMonadBFT is a pipelined 2-phase BFT algorithm with linear communication overhead in the common case. As in most BFT algorithms, communication proceeds in phases. At each phase, the leader sends a signed message to the voters, who send back signed responses.  Pipelining allows the quorum certificate (QC) or timeout certificate (TC) for block\nk\nto piggyback on the proposal for block\nk+1.\nTimeouts incur quadratic messaging.\nBlock time\n1 second\nFinality\nSingle-slot.  Once 2/3 of the stake weight has voted YES on a block proposal, it is finalized.\nMempool\nThere is a\nmempool\n. Transactions are erasure-coded and communicated using a broadcast tree for efficiency.\nSpam resistance\nConsensus participants\nDirect consensus participants vote on block proposals and serve as leaders. To serve as a direct participant, a node must have at least\nMinStake\nstaked and be in the top\nMaxConsensusNodes\nparticipants by stake weight. These parameters are set in code.\nTransaction hashing\nFor efficiency, block proposals refer to transactions\nby hash only\n.  If a node does not have a transaction, it will request the transaction by hash from a neighbor.\nDeferred execution\nIn Monad, consensus and execution occur in a pipelined fashion.  Nodes come to consensus on the official transaction order\nprior\nto executing that ordering (\nDeferred Execution\n); the outcome of execution is\nnot\na prerequisite to consensus.\nIn blockchains where execution\nis\na prerequisite to consensus, the time budget for execution is a small fraction of the block time.  Pipelining consensus and execution allows Monad to expend the full block time on\nboth\nconsensus and execution.\nBlock proposals consist of an ordered list of transaction hashes and a state merkle root from\nD\nblocks ago.  The delay parameter\nD\nis set in code; it is expected that\nD = 10\ninitially.\nTo prevent spam, nodes validate that the account balance is sufficient to pay for any value transfer\nand\nuser-specified maximum transaction cost for transactions submitted during the delay period of\nD\nblocks.\nAn account's available balance computed by consensus (as of\nD\nblocks ago) is effectively a budget for \"in-flight\" orders; it exists to ensure that the account can pay for all submitted transactions.\nState determinism\nFinality occurs at consensus time; the official ordering of transactions is enshrined at this point, and the outcome is fully deterministic for any full node, who will generally execute the transactions for that new block in under 1 second.\nThe\nD\n-block delay for state merkle roots is only for state root verification, for example for allowing a node to ensure that it didn't make a computation error.\nExecution\n​\nThe execution phase for each block begins after consensus is reached on that block, allowing the node to proceed with consensus on subsequent blocks.\nParallel Execution\n​\nTransactions are linearly ordered; the job of execution is to arrive at the state that results from executing that list of transactions serially. The naive approach is just to execute the transactions one after another. Can we do better? Yes we can!\nMonad implements\nparallel execution\n:\nAn executor is a virtual machine for executing transactions. Monad runs many executors in parallel.\nAn executor takes a transaction and produces a\nresult\n. A result is a list of\ninputs\nto and\noutputs\nof the transactions, where inputs are (ContractAddress, Slot, Value) tuples that were SLOADed in the course of execution, and outputs are (ContractAddress, Slot, Value) tuples that were SSTOREd as a result of the transaction.\nResults are initially produced in a pending state; they are then committed in the original order of the transactions. When a result is committed, its outputs update the current state. When it is a result’s turn to be committed, Monad checks that its inputs still match the current state; if they don’t, Monad reschedules the transaction. As a result of this concurrency control, Monad’s execution is guaranteed to produce the same result as if transactions were run serially.\nWhen transactions are rescheduled, many or all of the required inputs are cached, so re-execution is generally relatively inexpensive. Note that upon re-execution, a transaction may produce a different set of Inputs than the previous execution did;\nMonadDb: high-performance state backend\n​\nAll active state is stored in\nMonadDb\n, a storage backend for solid-state drives (SSDs) that is optimized for storing merkle trie data. Updates are batched so that the merkle root can be updated efficiently.\nMonadDb implements in-memory caching and uses\nasio\nfor efficient asynchronous reads and writes. Nodes should have 32 GB of RAM for optimal performance.\nComparison to Ethereum: User's Perspective\n​\nAttribute\nEthereum\nMonad\nTransactions/second\n(smart contract calls and transfers)\n~10\n~10,000\nBlock time\n12s\n1s\nFinality\n2 epochs\n(12-18 min)\nSingle-slot (1s)\nBytecode standard\nEVM (\nShanghai fork\n)\nEVM (\nShanghai fork\n)\nRPC API\nEthereum RPC API\nEthereum RPC API\nCryptography\nECDSA\nECDSA\nAccounts\nLast 20 bytes of keccak-256 of public key under ECDSA\nLast 20 bytes of keccak-256 of public key under ECDSA\nConsensus mechanism\nGasper\n(Casper-FFG finality gadget +\nLMD-GHOST fork-choice rule)\nMonadBFT (pipelined HotStuff with additional research improvements)\nMempool\nYes\nYes\nTransaction ordering\nLeader's discretion (in practice, PBS)\nLeader's discretion (default behavior: priority gas auction)\nSybil-resistance mechanism\nPoS\nPoS\nDelegation allowed\nNo; pseudo-delegation through LSTs\nYes\nHardware Requirements\n(full node)\n4-core CPU\n16 GB RAM\n1 TB SSD\n25 Mbit/s bandwidth\n16-core CPU\n32 GB RAM\n2 TB SSD\n100 Mbit/s bandwidth\nEdit this page",
      "url": "https://docs.monad.xyz/introduction/monad-for-developers",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/\" itemprop=\"item\"><span itemprop=\"name\">Introduction</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Monad for Developers</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Monad for Developers</h1></header>\n<p>Monad is an Ethereum-compatible Layer-1 blockchain with 10,000 tps of throughput, 1-second block times, and single-slot finality.</p>\n<p>Monad's implementation of the Ethereum Virtual Machine complies with the <a href=\"https://www.evm.codes/?fork=shanghai\" rel=\"noopener noreferrer\" target=\"_blank\">Shanghai fork</a>; simulation of historical Ethereum transactions with the Monad execution environment produces identical outcomes. Monad also offers full Ethereum RPC compatibility so that users can interact with Monad using familiar tools like Etherscan, Phantom, or MetaMask.</p>\n<p>Monad accomplishes these performance improvements through the introduction of several major innovations:</p>\n<ul>\n<li><a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a> (pipelined HotStuff consensus with additional research improvements), </li>\n<li><a href=\"/monad-arch/consensus/deferred-execution\">Deferred Execution</a> (pipelining between consensus and execution to significantly increase the execution budget)</li>\n<li><a href=\"/monad-arch/execution/parallel-execution\">Parallel Execution</a></li>\n<li><a href=\"/monad-arch/execution/monaddb\">MonadDb</a> (high-performance state backend)</li>\n</ul>\n<p>Although Monad features parallel execution and pipelining, it's important to note that blocks in Monad are linear, and transactions are linearly ordered within each block.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"transaction-format\">Transaction format<a aria-label=\"Direct link to Transaction format\" class=\"hash-link\" href=\"#transaction-format\" title=\"Direct link to Transaction format\">​</a></h2>\n<table data-header-hidden=\"true\"><thead><tr><th width=\"248.5\"></th><th></th></tr></thead><tbody><tr><td>Address space</td><td>matches Ethereum<br/>20-byte addresses using ECDSA</td></tr><tr><td>Transaction format</td><td><a href=\"https://ethereum.org/en/developers/docs/transactions/\">matches Ethereum</a><br/>complies with <a href=\"https://eips.ethereum.org/EIPS/eip-2718\">EIP-2718</a>, encoded with <a href=\"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\">RLP</a>.  Access lists (<a href=\"https://eips.ethereum.org/EIPS/eip-2930\">EIP-2930</a>) are supported but not required.</td></tr><tr><td>Wallet compatibility</td><td>Monad is compatible with standard Ethereum wallets such as Phantom or MetaMask. The only change required is to alter the RPC URL and ChainId.</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"smart-contracts\">Smart contracts<a aria-label=\"Direct link to Smart contracts\" class=\"hash-link\" href=\"#smart-contracts\" title=\"Direct link to Smart contracts\">​</a></h2>\n<ul>\n<li>Monad supports EVM bytecode, and is bytecode-equivalent to Ethereum. All <a href=\"https://www.evm.codes/?fork=shanghai\" rel=\"noopener noreferrer\" target=\"_blank\">opcodes</a> (as of the Shanghai fork) are supported.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"consensus\"><strong>Consensus</strong><a aria-label=\"Direct link to consensus\" class=\"hash-link\" href=\"#consensus\" title=\"Direct link to consensus\">​</a></h2>\n<table data-header-hidden=\"true\"><thead><tr><th width=\"191.5\"></th><th></th></tr></thead><tbody><tr><td>Sybil resistance mechanism</td><td>Proof-of-Stake (PoS)</td></tr><tr><td>Delegation</td><td>Allowed (in-protocol)</td></tr><tr><td>Consensus mechanism and pipelining</td><td><a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a> is a leader-based algorithm for reaching agreement about transaction order and inclusion under partially synchronous conditions. Broadly characterized, it is a derivative of HotStuff with additional research improvements.<br/><br/>MonadBFT is a pipelined 2-phase BFT algorithm with linear communication overhead in the common case. As in most BFT algorithms, communication proceeds in phases. At each phase, the leader sends a signed message to the voters, who send back signed responses.  Pipelining allows the quorum certificate (QC) or timeout certificate (TC) for block <code>k</code> to piggyback on the proposal for block <code>k+1.</code> Timeouts incur quadratic messaging.</td></tr><tr><td>Block time</td><td>1 second</td></tr><tr><td>Finality</td><td>Single-slot.  Once 2/3 of the stake weight has voted YES on a block proposal, it is finalized.</td></tr><tr><td>Mempool</td><td>There is a <a href=\"/monad-arch/consensus/local-mempool\">mempool</a>. Transactions are erasure-coded and communicated using a broadcast tree for efficiency.</td></tr><tr><td>Spam resistance</td></tr><tr><td>Consensus participants</td><td>Direct consensus participants vote on block proposals and serve as leaders. To serve as a direct participant, a node must have at least <code>MinStake</code> staked and be in the top <code>MaxConsensusNodes</code> participants by stake weight. These parameters are set in code.</td></tr><tr><td>Transaction hashing</td><td>For efficiency, block proposals refer to transactions <a href=\"/monad-arch/consensus/local-mempool\">by hash only</a>.  If a node does not have a transaction, it will request the transaction by hash from a neighbor.</td></tr><tr><td>Deferred execution</td><td><p>In Monad, consensus and execution occur in a pipelined fashion.  Nodes come to consensus on the official transaction order <em>prior</em> to executing that ordering (<a href=\"/monad-arch/consensus/deferred-execution\">Deferred Execution</a>); the outcome of execution is <em>not</em> a prerequisite to consensus.</p><p></p><p>In blockchains where execution <em>is</em> a prerequisite to consensus, the time budget for execution is a small fraction of the block time.  Pipelining consensus and execution allows Monad to expend the full block time on <em>both</em> consensus and execution.<br/></p><p>Block proposals consist of an ordered list of transaction hashes and a state merkle root from <code>D</code> blocks ago.  The delay parameter <code>D</code> is set in code; it is expected that <code>D = 10</code> initially.</p><p></p><p>To prevent spam, nodes validate that the account balance is sufficient to pay for any value transfer <i>and</i> user-specified maximum transaction cost for transactions submitted during the delay period of <code>D</code> blocks.</p><p></p><p>An account's available balance computed by consensus (as of <code>D</code> blocks ago) is effectively a budget for \"in-flight\" orders; it exists to ensure that the account can pay for all submitted transactions.</p></td></tr><tr><td>State determinism </td><td>Finality occurs at consensus time; the official ordering of transactions is enshrined at this point, and the outcome is fully deterministic for any full node, who will generally execute the transactions for that new block in under 1 second.<br/><br/>The <code>D</code>-block delay for state merkle roots is only for state root verification, for example for allowing a node to ensure that it didn't make a computation error.</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"execution\"><strong>Execution</strong><a aria-label=\"Direct link to execution\" class=\"hash-link\" href=\"#execution\" title=\"Direct link to execution\">​</a></h2>\n<p>The execution phase for each block begins after consensus is reached on that block, allowing the node to proceed with consensus on subsequent blocks.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"parallel-execution\">Parallel Execution<a aria-label=\"Direct link to Parallel Execution\" class=\"hash-link\" href=\"#parallel-execution\" title=\"Direct link to Parallel Execution\">​</a></h3>\n<p>Transactions are linearly ordered; the job of execution is to arrive at the state that results from executing that list of transactions serially. The naive approach is just to execute the transactions one after another. Can we do better? Yes we can!</p>\n<p>Monad implements <a href=\"/introduction/monad-for-developers#parallel-execution\">parallel execution</a>:</p>\n<ul>\n<li>An executor is a virtual machine for executing transactions. Monad runs many executors in parallel.</li>\n<li>An executor takes a transaction and produces a <strong>result</strong>. A result is a list of <strong>inputs</strong> to and <strong>outputs</strong> of the transactions, where inputs are (ContractAddress, Slot, Value) tuples that were SLOADed in the course of execution, and outputs are (ContractAddress, Slot, Value) tuples that were SSTOREd as a result of the transaction.</li>\n<li>Results are initially produced in a pending state; they are then committed in the original order of the transactions. When a result is committed, its outputs update the current state. When it is a result’s turn to be committed, Monad checks that its inputs still match the current state; if they don’t, Monad reschedules the transaction. As a result of this concurrency control, Monad’s execution is guaranteed to produce the same result as if transactions were run serially.</li>\n<li>When transactions are rescheduled, many or all of the required inputs are cached, so re-execution is generally relatively inexpensive. Note that upon re-execution, a transaction may produce a different set of Inputs than the previous execution did;</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"monaddb-high-performance-state-backend\">MonadDb: high-performance state backend<a aria-label=\"Direct link to MonadDb: high-performance state backend\" class=\"hash-link\" href=\"#monaddb-high-performance-state-backend\" title=\"Direct link to MonadDb: high-performance state backend\">​</a></h3>\n<p>All active state is stored in <a href=\"/monad-arch/execution/monaddb\">MonadDb</a>, a storage backend for solid-state drives (SSDs) that is optimized for storing merkle trie data. Updates are batched so that the merkle root can be updated efficiently.</p>\n<p>MonadDb implements in-memory caching and uses <a href=\"https://think-async.com/Asio/\" rel=\"noopener noreferrer\" target=\"_blank\">asio</a> for efficient asynchronous reads and writes. Nodes should have 32 GB of RAM for optimal performance.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"comparison-to-ethereum-users-perspective\">Comparison to Ethereum: User's Perspective<a aria-label=\"Direct link to Comparison to Ethereum: User's Perspective\" class=\"hash-link\" href=\"#comparison-to-ethereum-users-perspective\" title=\"Direct link to Comparison to Ethereum: User's Perspective\">​</a></h2>\n<table><thead><tr><th width=\"218\">Attribute</th><th width=\"264.3333333333333\">Ethereum</th><th width=\"255\">Monad</th></tr></thead><tbody><tr><td><strong>Transactions/second</strong> (smart contract calls and transfers)</td><td>~10</td><td>~10,000</td></tr><tr><td><strong>Block time</strong></td><td>12s</td><td>1s</td></tr><tr><td><strong>Finality</strong></td><td><a href=\"https://hackmd.io/@prysmaticlabs/finality\">2 epochs</a> (12-18 min)</td><td>Single-slot (1s)</td></tr><tr><td><strong>Bytecode standard</strong></td><td>EVM (<a href=\"https://www.evm.codes/?fork=shanghai\">Shanghai fork</a>)</td><td>EVM (<a href=\"https://www.evm.codes/?fork=shanghai\">Shanghai fork</a>)</td></tr><tr><td><strong>RPC API</strong></td><td><a href=\"https://ethereum.org/en/developers/docs/apis/json-rpc/\">Ethereum RPC API</a></td><td><a href=\"https://ethereum.org/en/developers/docs/apis/json-rpc/\">Ethereum RPC API</a></td></tr><tr><td><strong>Cryptography</strong></td><td>ECDSA</td><td>ECDSA</td></tr><tr><td><strong>Accounts</strong></td><td>Last 20 bytes of keccak-256 of public key under ECDSA</td><td>Last 20 bytes of keccak-256 of public key under ECDSA</td></tr><tr><td><strong>Consensus mechanism</strong></td><td>Gasper <br/>(Casper-FFG finality gadget + <br/>LMD-GHOST fork-choice rule)</td><td>MonadBFT (pipelined HotStuff with additional research improvements)</td></tr><tr><td><strong>Mempool</strong></td><td>Yes</td><td>Yes</td></tr><tr><td><strong>Transaction ordering</strong></td><td>Leader's discretion (in practice, PBS)</td><td>Leader's discretion (default behavior: priority gas auction)</td></tr><tr><td><strong>Sybil-resistance mechanism</strong></td><td>PoS</td><td>PoS</td></tr><tr><td><strong>Delegation allowed</strong></td><td>No; pseudo-delegation through LSTs</td><td>Yes</td></tr><tr><td><a href=\"/docs/monad-arch/technical-discussion/hardware-requirements\"><strong>Hardware Requirements</strong></a> <strong>(full node)</strong></td><td>4-core CPU<br/>16 GB RAM<br/>1 TB SSD<br/>25 Mbit/s bandwidth</td><td>16-core CPU<br/>32 GB RAM<br/>2 TB SSD<br/>100 Mbit/s bandwidth</td></tr></tbody></table></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/introduction/monad-for-developers.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "introduction/monad-for-developers"
    },
    "Monad for Users": {
      "content": "Introduction\nMonad for Users\nOn this page\nMonad for Users\nMonad is a high-performance Ethereum-compatible L1, offering users the best of both worlds:\nportability\nand\nperformance\n.\nFrom a portability perspective, Monad offers\nfull bytecode compatibility\nfor the Ethereum Virtual Machine (EVM), so that applications built for Ethereum can be ported to Monad without code changes, and\nfull Ethereum RPC compatibility\n, so that infrastructure like Etherscan or The Graph can be used seamlessly.\nFrom a performance perspective, Monad offers\n10,000 tps\nof throughput, i.e. 1 billion transactions per day, while offering\n1 second block times\nand\n1 second finality\n. This allows Monad to support many more users and far more interactive experiences than existing blockchains, while offering far cheaper per-transaction costs.\nWhat's familiar about Monad?\n​\nFrom a user perspective, Monad behaves very similarly to Ethereum. You can use the same wallets (e.g. Phantom, MetaMask) or block explorers (e.g. Etherscan) to sign or view transactions. The same apps built for Ethereum can be ported to Monad without code changes, so it is expected that you'll be able to use many of your favorite apps from Ethereum on Monad. The address space in Monad is the same as in Ethereum, so you can reuse your existing keys.\nLike Ethereum, Monad features linear blocks, and linear ordering of transactions within a block.\nLike Ethereum, Monad is a proof-of-stake network maintained by a decentralized set of validators. Anyone can run a node to independently verify transaction execution, and significant care has been taken to keep hardware requirements minimal.\nWhat's different about Monad?\n​\nMonad makes exceptional performance possible by introducing\nparallel execution\nand\nsuperscalar pipelining\nto the Ethereum Virtual Machine.\nParallel execution\nis the practice of utilizing multiple cores and threads to strategically execute work in parallel while still committing the results in the original order. Although transactions are executed in parallel \"under the hood\", from the user and developer perspective they are executed serially; the result of a series of transactions is always the same as if the transactions had been executed one after another.\nSuperscalar pipelining\nis the practice of creating stages of work and executing the stages in parallel. A simple diagram tells the story:\nPipelining laundry day. Top: Naive; Bottom: Pipelined. Credit:\nProf. Lois Hawkes, FSU\nWhen doing four loads of laundry, the naive strategy is to wash, dry, fold, and store the first load of laundry before starting on the second one. The pipelined strategy is to start washing load 2 when load 1 goes into the dryer. Pipelining gets work done more efficiently by utilizing multiple resources simultaneously.\nMonad\nintroduces pipelining to address existing bottlenecks in state storage, transaction processing, and distributed consensus. In particular, Monad introduces pipelining and other optimizations in four major areas:\nMonadBFT\n(pipelined HotStuff consensus with additional research improvements)\nDeferred Execution\n(pipelining between consensus and execution to significantly increase the execution budget)\nParallel Execution\nMonadDb\n(high-performance state backend)\nMonad's client, which was written from scratch in C++ and Rust, reflect these architectural improvements and result in a platform for decentralized apps that can truly scale to world adoption.\nWhy should I care?\n​\nDecentralized apps are replacements for centralized services with several significant advantages:\nOpen APIs / composability\n: decentralized apps can be called atomically by other decentralized apps, allowing developers to build more complex functionality by stacking existing components.\nTransparency\n: app logic is expressed purely through code, so anyone can review the logic for side effects. State is transparent and auditable; proof of reserves in DeFi is the default.\nCensorship-resistance and credible neutrality:\nanyone can submit transactions or upload applications to a permissionless network.\nGlobal reach\n: anyone with access to the internet can access crucial financial services, including unbanked/underbanked users.\nHowever, decentralized apps need cheap, performant infrastructure to reach their intended level of impact. A single app with 1 million daily active users (DAUs) and 10 transactions per user per day would require 10 million transactions per day, or 100 tps. A quick glance at\nL2Beat\n- a useful website summarizing the throughput and decentralization of existing EVM-compatible L1s and L2s - shows that no EVM blockchain supports even close to that level of throughput right now.\nMonad materially improves on the performance of an EVM-compatible blockchain network, pioneering several innovations that will hopefully become standard in Ethereum in the years to come.\nWith Monad, developers, users, and researchers can reuse the wealth of existing applications, libraries, and applied cryptography research that have all been built for the EVM.\nEdit this page",
      "url": "https://docs.monad.xyz/introduction/monad-for-users",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/\" itemprop=\"item\"><span itemprop=\"name\">Introduction</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Monad for Users</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Monad for Users</h1></header>\n<p>Monad is a high-performance Ethereum-compatible L1, offering users the best of both worlds: <strong>portability</strong> and <strong>performance</strong>.</p>\n<p>From a portability perspective, Monad offers <strong>full bytecode compatibility</strong> for the Ethereum Virtual Machine (EVM), so that applications built for Ethereum can be ported to Monad without code changes, and <strong>full Ethereum RPC compatibility</strong>, so that infrastructure like Etherscan or The Graph can be used seamlessly.</p>\n<p>From a performance perspective, Monad offers <strong>10,000 tps</strong> of throughput, i.e. 1 billion transactions per day, while offering <strong>1 second block times</strong> and <strong>1 second finality</strong>. This allows Monad to support many more users and far more interactive experiences than existing blockchains, while offering far cheaper per-transaction costs.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-familiar-about-monad\">What's familiar about Monad?<a aria-label=\"Direct link to What's familiar about Monad?\" class=\"hash-link\" href=\"#whats-familiar-about-monad\" title=\"Direct link to What's familiar about Monad?\">​</a></h2>\n<p>From a user perspective, Monad behaves very similarly to Ethereum. You can use the same wallets (e.g. Phantom, MetaMask) or block explorers (e.g. Etherscan) to sign or view transactions. The same apps built for Ethereum can be ported to Monad without code changes, so it is expected that you'll be able to use many of your favorite apps from Ethereum on Monad. The address space in Monad is the same as in Ethereum, so you can reuse your existing keys.</p>\n<p>Like Ethereum, Monad features linear blocks, and linear ordering of transactions within a block. </p>\n<p>Like Ethereum, Monad is a proof-of-stake network maintained by a decentralized set of validators. Anyone can run a node to independently verify transaction execution, and significant care has been taken to keep hardware requirements minimal.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-different-about-monad\">What's different about Monad?<a aria-label=\"Direct link to What's different about Monad?\" class=\"hash-link\" href=\"#whats-different-about-monad\" title=\"Direct link to What's different about Monad?\">​</a></h2>\n<p>Monad makes exceptional performance possible by introducing <strong>parallel execution</strong> and <strong>superscalar pipelining</strong> to the Ethereum Virtual Machine.</p>\n<p><strong>Parallel execution</strong> is the practice of utilizing multiple cores and threads to strategically execute work in parallel while still committing the results in the original order. Although transactions are executed in parallel \"under the hood\", from the user and developer perspective they are executed serially; the result of a series of transactions is always the same as if the transactions had been executed one after another.</p>\n<p><strong>Superscalar pipelining</strong> is the practice of creating stages of work and executing the stages in parallel. A simple diagram tells the story:</p>\n<figure><img alt=\"Pipelining, Laundry Day\" class=\"center\" src=\"/img/pipelining.png\"/><figcaption id=\"center\">Pipelining laundry day. Top: Naive; Bottom: Pipelined. Credit: <a href=\"https://www.cs.fsu.edu/~hawkes/cda3101lects/chap6/index.html?$$$F6.1.html$$$\">Prof. Lois Hawkes, FSU</a></figcaption></figure>\n<p>When doing four loads of laundry, the naive strategy is to wash, dry, fold, and store the first load of laundry before starting on the second one. The pipelined strategy is to start washing load 2 when load 1 goes into the dryer. Pipelining gets work done more efficiently by utilizing multiple resources simultaneously.</p>\n<p><strong>Monad</strong> introduces pipelining to address existing bottlenecks in state storage, transaction processing, and distributed consensus. In particular, Monad introduces pipelining and other optimizations in four major areas:</p>\n<ul>\n<li><a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a> (pipelined HotStuff consensus with additional research improvements)</li>\n<li><a href=\"/monad-arch/consensus/deferred-execution\">Deferred Execution</a> (pipelining between consensus and execution to significantly increase the execution budget)</li>\n<li><a href=\"/monad-arch/execution/parallel-execution\">Parallel Execution</a></li>\n<li><a href=\"/monad-arch/execution/monaddb\">MonadDb</a> (high-performance state backend)</li>\n</ul>\n<p>Monad's client, which was written from scratch in C++ and Rust, reflect these architectural improvements and result in a platform for decentralized apps that can truly scale to world adoption.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"why-should-i-care\">Why should I care?<a aria-label=\"Direct link to Why should I care?\" class=\"hash-link\" href=\"#why-should-i-care\" title=\"Direct link to Why should I care?\">​</a></h2>\n<p>Decentralized apps are replacements for centralized services with several significant advantages:</p>\n<ul>\n<li><strong>Open APIs / composability</strong>: decentralized apps can be called atomically by other decentralized apps, allowing developers to build more complex functionality by stacking existing components.</li>\n<li><strong>Transparency</strong>: app logic is expressed purely through code, so anyone can review the logic for side effects. State is transparent and auditable; proof of reserves in DeFi is the default.</li>\n<li><strong>Censorship-resistance and credible neutrality:</strong> anyone can submit transactions or upload applications to a permissionless network.</li>\n<li><strong>Global reach</strong>: anyone with access to the internet can access crucial financial services, including unbanked/underbanked users.</li>\n</ul>\n<p>However, decentralized apps need cheap, performant infrastructure to reach their intended level of impact. A single app with 1 million daily active users (DAUs) and 10 transactions per user per day would require 10 million transactions per day, or 100 tps. A quick glance at <a href=\"https://l2beat.com/scaling/activity\" rel=\"noopener noreferrer\" target=\"_blank\">L2Beat</a> - a useful website summarizing the throughput and decentralization of existing EVM-compatible L1s and L2s - shows that no EVM blockchain supports even close to that level of throughput right now.</p>\n<p>Monad materially improves on the performance of an EVM-compatible blockchain network, pioneering several innovations that will hopefully become standard in Ethereum in the years to come.</p>\n<p>With Monad, developers, users, and researchers can reuse the wealth of existing applications, libraries, and applied cryptography research that have all been built for the EVM.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/introduction/monad-for-users.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "introduction/monad-for-users"
    },
    "Why Blockchain?": {
      "content": "Introduction\nWhy Blockchain?\nOn this page\nWhy Blockchain?\nA blockchain is decentralized agreement among a diverse set of participants about two things:\nAn official ordering (ledger) of transactions\nAn official state of the world, including balances of accounts and the state of various programs.\nIn modern blockchains such as Ethereum, transactions consist of balance transfers, creation of new programs, and function calls against existing programs. The aggregate result of all transactions up to now produces the current state, which is why\nagreement about (1) implies agreement about (2).\nA blockchain system has a set of protocol rules which describe how a distributed set of nodes which are currently in sync will communicate with each other to agree upon a new list of transactions that each should apply. Induction keeps the nodes in sync: they start with the same state and apply the same transactions, so at the end of applying a new list of transactions, they still have consistent state. (This essay will ignore the details of how such a system of nodes achieves agreement, but you can refer to the documentation of Monad's\nconsensus mechanism\nfor further details.)\nShared global state enables the development of decentralized apps - apps that live \"on the blockchain\", i.e. on each of the nodes in the blockchain system. A decentralized app is a chunk of code (as well as persistent, app-specific state) that can get invoked by any user, who does so by submitting a transaction pointing to a function on that app. Each of the nodes in the blockchain is responsible for correctly executing the bytecode being called; duplication keeps each node honest.\nAn example app\n​\nDecentralized apps can implement functionality that we might otherwise expect to be implemented in a centralized fashion. For example, a very simple example of a decentralized app is a\nVirtual Bank\n(typically referred to in crypto as a Lending Protocol).\nIn the physical world, a bank is a business that takes deposits and loans them out at a higher rate. The bank makes the spread between the high rate and the low rate; the borrower gets a loan to do something economically productive; and you earn interest on your deposits. Everyone wins!\nA Virtual Bank is simply an app with four major methods:\ndeposit\n,\nwithdraw\n,\nborrow\n, and\nrepay\n. The logic for each of those methods is mostly bookkeeping to ensure that deposits and loans are being tracked correctly:\nclass VirtualBank:\ndef deposit(sender, amount):\n# transfer amount from sender to myself (the bank)\n# do internal bookkeeping to credit the sender\ndef withdraw(sender, amount):\n# ensure the sender had enough on deposit\n# do internal bookkeeping to debit the sender\n# transfer amount from myself (the bank) to sender\ndef borrow(sender, amount):\n# ...\ndef repay(sender, amount);\n# ...\nIn Ethereum, or in Monad, someone can write code for this Virtual Bank and upload it; then anyone can utilize it for borrowing and lending, potentially far more easily than when trying to get access to banking services in their home country.\nThis simple example shows the power of decentralized apps. Here are a few other benefits to call out:\nOpen APIs / composability\n: decentralized apps can be called atomically by other decentralized apps, allowing developers to build more complex functionality by stacking existing components.\nTransparency\n: app logic is expressed purely through code, so anyone can review the logic for side effects. State is transparent and auditable; proof of reserves in DeFi is the default.\nCensorship-resistance and credible neutrality:\nanyone can submit transactions or upload applications to a permissionless network.\nGlobal reach\n: anyone with access to the internet can access crucial financial services, including unbanked/underbanked users.\nEdit this page",
      "url": "https://docs.monad.xyz/introduction/why-blockchain",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/\" itemprop=\"item\"><span itemprop=\"name\">Introduction</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Why Blockchain?</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Why Blockchain?</h1></header>\n<p>A blockchain is decentralized agreement among a diverse set of participants about two things:</p>\n<ol>\n<li>An official ordering (ledger) of transactions</li>\n<li>An official state of the world, including balances of accounts and the state of various programs.</li>\n</ol>\n<p>In modern blockchains such as Ethereum, transactions consist of balance transfers, creation of new programs, and function calls against existing programs. The aggregate result of all transactions up to now produces the current state, which is why <em>agreement about (1) implies agreement about (2).</em></p>\n<p>A blockchain system has a set of protocol rules which describe how a distributed set of nodes which are currently in sync will communicate with each other to agree upon a new list of transactions that each should apply. Induction keeps the nodes in sync: they start with the same state and apply the same transactions, so at the end of applying a new list of transactions, they still have consistent state. (This essay will ignore the details of how such a system of nodes achieves agreement, but you can refer to the documentation of Monad's <a href=\"/monad-arch/consensus/monad-bft\">consensus mechanism</a> for further details.)</p>\n<p>Shared global state enables the development of decentralized apps - apps that live \"on the blockchain\", i.e. on each of the nodes in the blockchain system. A decentralized app is a chunk of code (as well as persistent, app-specific state) that can get invoked by any user, who does so by submitting a transaction pointing to a function on that app. Each of the nodes in the blockchain is responsible for correctly executing the bytecode being called; duplication keeps each node honest.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"an-example-app\">An example app<a aria-label=\"Direct link to An example app\" class=\"hash-link\" href=\"#an-example-app\" title=\"Direct link to An example app\">​</a></h2>\n<p>Decentralized apps can implement functionality that we might otherwise expect to be implemented in a centralized fashion. For example, a very simple example of a decentralized app is a <em>Virtual Bank</em> (typically referred to in crypto as a Lending Protocol).</p>\n<p>In the physical world, a bank is a business that takes deposits and loans them out at a higher rate. The bank makes the spread between the high rate and the low rate; the borrower gets a loan to do something economically productive; and you earn interest on your deposits. Everyone wins!</p>\n<p>A Virtual Bank is simply an app with four major methods: <code>deposit</code>, <code>withdraw</code>, <code>borrow</code>, and <code>repay</code>. The logic for each of those methods is mostly bookkeeping to ensure that deposits and loans are being tracked correctly:</p>\n<div class=\"codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\" tabindex=\"0\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">class VirtualBank:</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  def deposit(sender, amount):</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # transfer amount from sender to myself (the bank)</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # do internal bookkeeping to credit the sender</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  def withdraw(sender, amount):</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # ensure the sender had enough on deposit</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # do internal bookkeeping to debit the sender</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # transfer amount from myself (the bank) to sender</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  def borrow(sender, amount):</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # ...</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  def repay(sender, amount);</span><br/></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    # ...</span><br/></span></code></pre><div class=\"buttonGroup__atx\"><button aria-label=\"Copy code to clipboard\" class=\"clean-btn\" title=\"Copy\" type=\"button\"><span aria-hidden=\"true\" class=\"copyButtonIcons_eSgA\"><svg class=\"copyButtonIcon_y97N\" viewbox=\"0 0 24 24\"><path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" fill=\"currentColor\"></path></svg><svg class=\"copyButtonSuccessIcon_LjdS\" viewbox=\"0 0 24 24\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"currentColor\"></path></svg></span></button></div></div></div>\n<p>In Ethereum, or in Monad, someone can write code for this Virtual Bank and upload it; then anyone can utilize it for borrowing and lending, potentially far more easily than when trying to get access to banking services in their home country.</p>\n<p>This simple example shows the power of decentralized apps. Here are a few other benefits to call out:</p>\n<ul>\n<li><strong>Open APIs / composability</strong>: decentralized apps can be called atomically by other decentralized apps, allowing developers to build more complex functionality by stacking existing components.</li>\n<li><strong>Transparency</strong>: app logic is expressed purely through code, so anyone can review the logic for side effects. State is transparent and auditable; proof of reserves in DeFi is the default.</li>\n<li><strong>Censorship-resistance and credible neutrality:</strong> anyone can submit transactions or upload applications to a permissionless network.</li>\n<li><strong>Global reach</strong>: anyone with access to the internet can access crucial financial services, including unbanked/underbanked users.</li>\n</ul></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/introduction/why-blockchain.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "introduction/why-blockchain"
    },
    "Why Monad: Decentralization + Performance": {
      "content": "Introduction\nWhy Monad: Decentralization + Performance\nOn this page\nWhy Monad: Decentralization + Performance\nDecentralization matters\n​\nA blockchain has several major components:\nConsensus mechanism for achieving agreement on transactions to append to the ledger\nExecution/storage system for maintaining the active state\nIn increasing the performance of these components, one could cut corners, for example by requiring all of the nodes to be physically close to each other (to save on the overhead of consensus), or by requiring a huge amount of RAM (to keep much or all of the state in memory), but it would be at a significant cost to decentralization.\nAnd decentralization is the whole point!\nAs discussed in\nWhy Blockchain?\n, decentralized shared global state allows many parties to coordinate while relying on a single, shared, objective source of truth. Decentralization is key to the matter; a blockchain maintained by a small group of node operators (or in the extreme case, a single operator!) would not offer benefits such as trustlessness, credible neutrality, and censorship-resistance.\nFor any blockchain network, decentralization should be the principal concern. Performance improvements should not come at the expense of decentralization.\nToday's performance bottlenecks\n​\nEthereum's current execution limits (1.25M gas per second) are set conservatively, but for several good reasons:\nInefficient storage access patterns\nSingle-threaded execution\nVery limited execution budget, because consensus can't proceed without execution\nConcerns about state growth, and the effect of state growth on future state access costs\nMonad addresses these limitations through algorithmic improvements and architectural changes, pioneering several innovations that will hopefully become standard in Ethereum in the years to come. Maintaining a high degree of decentralization, while making material performance improvements, is the key consideration.\nAddressing these bottlenecks through optimization\n​\nMonad enables pipelining and other optimizations in four major areas to enable exceptional Ethereum Virtual Machine performance and materially advance the decentralization/scalability tradeoff. Subsequent pages describe these major areas of improvement:\nMonadBFT\nDeferred Execution\nParallel Execution\nMonadDb\nEdit this page",
      "url": "https://docs.monad.xyz/introduction/why-monad",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/\" itemprop=\"item\"><span itemprop=\"name\">Introduction</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Why Monad: Decentralization + Performance</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Why Monad: Decentralization + Performance</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"decentralization-matters\">Decentralization matters<a aria-label=\"Direct link to Decentralization matters\" class=\"hash-link\" href=\"#decentralization-matters\" title=\"Direct link to Decentralization matters\">​</a></h2>\n<p>A blockchain has several major components:</p>\n<ul>\n<li>Consensus mechanism for achieving agreement on transactions to append to the ledger</li>\n<li>Execution/storage system for maintaining the active state</li>\n</ul>\n<p>In increasing the performance of these components, one could cut corners, for example by requiring all of the nodes to be physically close to each other (to save on the overhead of consensus), or by requiring a huge amount of RAM (to keep much or all of the state in memory), but it would be at a significant cost to decentralization.</p>\n<p>And decentralization is the whole point!</p>\n<p>As discussed in <a href=\"/introduction/why-blockchain\">Why Blockchain?</a>, decentralized shared global state allows many parties to coordinate while relying on a single, shared, objective source of truth. Decentralization is key to the matter; a blockchain maintained by a small group of node operators (or in the extreme case, a single operator!) would not offer benefits such as trustlessness, credible neutrality, and censorship-resistance.</p>\n<p>For any blockchain network, decentralization should be the principal concern. Performance improvements should not come at the expense of decentralization.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"todays-performance-bottlenecks\">Today's performance bottlenecks<a aria-label=\"Direct link to Today's performance bottlenecks\" class=\"hash-link\" href=\"#todays-performance-bottlenecks\" title=\"Direct link to Today's performance bottlenecks\">​</a></h2>\n<p>Ethereum's current execution limits (1.25M gas per second) are set conservatively, but for several good reasons:</p>\n<ul>\n<li>Inefficient storage access patterns</li>\n<li>Single-threaded execution</li>\n<li>Very limited execution budget, because consensus can't proceed without execution</li>\n<li>Concerns about state growth, and the effect of state growth on future state access costs</li>\n</ul>\n<p>Monad addresses these limitations through algorithmic improvements and architectural changes, pioneering several innovations that will hopefully become standard in Ethereum in the years to come. Maintaining a high degree of decentralization, while making material performance improvements, is the key consideration.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"addressing-these-bottlenecks-through-optimization\">Addressing these bottlenecks through optimization<a aria-label=\"Direct link to Addressing these bottlenecks through optimization\" class=\"hash-link\" href=\"#addressing-these-bottlenecks-through-optimization\" title=\"Direct link to Addressing these bottlenecks through optimization\">​</a></h2>\n<p>Monad enables pipelining and other optimizations in four major areas to enable exceptional Ethereum Virtual Machine performance and materially advance the decentralization/scalability tradeoff. Subsequent pages describe these major areas of improvement:</p>\n<ul>\n<li><a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a></li>\n<li><a href=\"/monad-arch/consensus/deferred-execution\">Deferred Execution</a></li>\n<li><a href=\"/monad-arch/execution/parallel-execution\">Parallel Execution</a></li>\n<li><a href=\"/monad-arch/execution/monaddb\">MonadDb</a></li>\n</ul></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/introduction/why-monad.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "introduction/why-monad"
    }
  },
  "architecture": {
    "Concepts": {
      "content": "Concepts\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/concepts/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Concepts</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/concepts/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/concepts"
    },
    "Asynchronous I/O": {
      "content": "Monad Architecture\nConcepts\nAsynchronous I/O\nAsynchronous I/O\nAsynchronous I/O\nis a form of input/output processing that allows the CPU to continue executing concurrently while communication is in progress.\nDisk and network are orders of magnitude slower than the CPU.  Rather than initiating an I/O operation and waiting for the result, the CPU can initiate the I/O operation as soon as it's known that the data will be needed, and continue executing other instructions which do not depend on the result of the I/O operation.\nSome rough comparisons for illustration purposes:\nDevice\nLatency\nBandwidth\nCPU L3 Cache\n10 ns\n>400 GB/s\nMemory\n100 ns\n100 GB/s\nDisk (NVMe SSD)\n400 us\n380 MB/s\nNetwork\n50 - 200 ms\n1 Gb/s (125 MB/s)\n(actual disk stats as reported by fio for random reads of size 2KB - ~190k IOPS)\nFortunately, SSD drives can perform operations concurrently, so the CPU can initiate several requests at the same time, continue executing, and then receive the results of multiple operations around the same time.\nSome databases (such as lmdb / mdbx) use memory-mapped storage to read and write to disk. Unfortunately, memory-mapped storage is implemented by the kernel (mmap) and is not asynchronous, so execution is blocked while waiting for the operation to complete.\nMore about asynchronous i/o can be read\nhere\n.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/concepts/asynchronous-io",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/concepts\" itemprop=\"item\"><span itemprop=\"name\">Concepts</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Asynchronous I/O</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"theme-doc-markdown markdown\"><header><h1>Asynchronous I/O</h1></header>\n<p><em>Asynchronous I/O</em> is a form of input/output processing that allows the CPU to continue executing concurrently while communication is in progress.</p>\n<p>Disk and network are orders of magnitude slower than the CPU.  Rather than initiating an I/O operation and waiting for the result, the CPU can initiate the I/O operation as soon as it's known that the data will be needed, and continue executing other instructions which do not depend on the result of the I/O operation.</p>\n<p>Some rough comparisons for illustration purposes:</p>\n<table><thead><tr><th width=\"260\">Device</th><th width=\"191.33333333333331\">Latency</th><th>Bandwidth</th></tr></thead><tbody><tr><td>CPU L3 Cache</td><td>10 ns</td><td>&gt;400 GB/s</td></tr><tr><td>Memory</td><td>100 ns</td><td>100 GB/s</td></tr><tr><td>Disk (NVMe SSD)</td><td>400 us</td><td>380 MB/s</td></tr><tr><td>Network</td><td>50 - 200 ms</td><td>1 Gb/s (125 MB/s)</td></tr></tbody></table>\n<p>(actual disk stats as reported by fio for random reads of size 2KB - ~190k IOPS)</p>\n<p>Fortunately, SSD drives can perform operations concurrently, so the CPU can initiate several requests at the same time, continue executing, and then receive the results of multiple operations around the same time.</p>\n<p>Some databases (such as lmdb / mdbx) use memory-mapped storage to read and write to disk. Unfortunately, memory-mapped storage is implemented by the kernel (mmap) and is not asynchronous, so execution is blocked while waiting for the operation to complete.</p>\n<p>More about asynchronous i/o can be read <a href=\"https://en.wikipedia.org/wiki/Asynchronous_I/O\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/concepts/asynchronous-io.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/concepts/asynchronous-io"
    },
    "Pipelining": {
      "content": "Monad Architecture\nConcepts\nPipelining\nPipelining\nPipelining\nis a technique for implementing parallelism by dividing tasks into a series of smaller tasks which can be processed in parallel.\nPipelining is used in computer processors to increase the throughput of executing a series of instructions sequentially at the same clock rate. (There are other techniques used in processors to increase throughput as well.)  More about instruction-level parallelism (ILP) can be read\nhere\n.\nA simple example of pipelining:\nPipelining laundry day. Top: Naive; Bottom: Pipelined. Credit:\nProf. Lois Hawkes, FSU\nWhen doing four loads of laundry, the naive strategy is to wash, dry, fold, and store the first load of laundry before starting on the second one.  The pipelined strategy is to start washing load 2 when load 1 goes into the dryer.  Pipelining gets work done more efficiently by utilizing multiple resources simultaneously.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/concepts/pipelining",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/concepts\" itemprop=\"item\"><span itemprop=\"name\">Concepts</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Pipelining</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"theme-doc-markdown markdown\"><header><h1>Pipelining</h1></header>\n<p><em>Pipelining</em> is a technique for implementing parallelism by dividing tasks into a series of smaller tasks which can be processed in parallel.</p>\n<p>Pipelining is used in computer processors to increase the throughput of executing a series of instructions sequentially at the same clock rate. (There are other techniques used in processors to increase throughput as well.)  More about instruction-level parallelism (ILP) can be read <a href=\"https://en.wikipedia.org/wiki/Instruction_pipelining\" rel=\"noopener noreferrer\" target=\"_blank\">here</a>.</p>\n<p>A simple example of pipelining:</p>\n<figure><img alt=\"Pipelining, Laundry Day\" class=\"center\" src=\"/img/pipelining.png\"/><figcaption id=\"center\">Pipelining laundry day. Top: Naive; Bottom: Pipelined. Credit: <a href=\"https://www.cs.fsu.edu/~hawkes/cda3101lects/chap6/index.html?$$$F6.1.html$$$\">Prof. Lois Hawkes, FSU</a></figcaption></figure>\n<p>When doing four loads of laundry, the naive strategy is to wash, dry, fold, and store the first load of laundry before starting on the second one.  The pipelined strategy is to start washing load 2 when load 1 goes into the dryer.  Pipelining gets work done more efficiently by utilizing multiple resources simultaneously.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/concepts/pipelining.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/concepts/pipelining"
    },
    "Consensus": {
      "content": "Consensus\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Consensus</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus"
    },
    "Block Sync": {
      "content": "Block Sync\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/block-sync",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Block Sync</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/block-sync.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/block-sync"
    },
    "Deferred Execution": {
      "content": "Monad Architecture\nConsensus\nDeferred Execution\nOn this page\nDeferred Execution\nOne of the novel aspects of the Monad blockchain is that execution is decoupled from consensus.\nTo recap, consensus is the process where Monad nodes come to agreement about the official ordering of transactions, while execution is the process of actually executing those transactions and updating the state.\nIn Monad consensus, nodes come to agreement about the official ordering of transactions, but without either the leader or validating nodes having to have executed those transactions yet.\nThat is, the leader proposes an ordering without yet knowing the resultant state root, and the validating nodes vote on block validity without knowing (for example) whether all of the transactions in the block execute without reverting.\nHow can this be? And why does Monad do this?\nThe answer is a cornerstone of Monad's design, and it allows Monad to unlock significant speedups that allow a single-shard blockchain to scale to millions of users.\nInterleaving execution and consensus is inefficient\n​\nIn Ethereum, execution is a prerequisite to consensus, so when nodes come to consensus on a block, they are agreeing on both (1) the list of transactions in the block, and (2) the merkle root summarizing all of the state after executing that list of transactions. As a result, the leader must execute all of the transactions in the proposed block\nbefore\nsharing the proposal, and the validating nodes must execute those transactions\nbefore\nresponding with a vote.\nIn this paradigm, the time budget for execution is extremely limited, since it has to happen twice\nand\nleave enough time for multiple rounds of cross-globe communication for consensus. Additionally, since execution will block consensus, the gas limit must be chosen extremely conservative, ensuring that the computation completes on all nodes within the budget even in the worst-case scenario.\nDetermined ordering implies state determinism\n​\nHere is an obvious but crucial insight: given an official ordering of transactions, the true state is completely determined. Execution is required to unveil the truth, but the truth is already determined.\nMonad takes advantage of this insight by removing the requirement that nodes execute prior to consensus. Node agreement is purely about the official ordering; each node executes the transactions in block\nN\nindependently while commencing consensus on block\nN+1\n.\nThis allows for a gas budget corresponding to the full block time, since execution merely needs to keep up with consensus. Additionally, this approach is more tolerant of variation in exact compute time, since execution only needs to keep up with consensus on average.\nDelayed merkle roots still ensure state machine replication\n​\nThe main objections one might have to the above are:\nWhat happens if one of the nodes is malicious, so doesn't execute the exact transactions specified in consensus? (For example, say it omits certain transactions, or just sets a state variable to an arbitrary value of its choice.)\nWhat happens if one of the nodes makes a mistake in execution?\nTo address these concerns, in Monad the block proposals include a merkle root delayed by\nD\nblocks, where\nD\nis a systemwide parameter (currently anticipated to be 10). As a result of this delayed merkle root:\nAfter the network comes to consensus (2/3 majority vote) on block\nN\n, it means that the network has agreed that the official consequence of block\nN-D\nis a state rooted in merkle root\nM\n. Light clients can then query full nodes for merkle proofs of state variable values at block\nN-D\n.\nAny node with an error in execution at block\nN-D\nwill fall out of consensus starting at block\nN\n. This will trigger a rollback on that node to the end state of block\nN-D-1\n, followed by re-execution of the transactions in block\nN-D\n(hopefully resulting in the merkle root matching), followed by a re-execution of the transactions in block\nN-D+1\n,\nN-D+2\n, etc.\nEthereum's approach uses consensus to enforce\nstate machine replication\nin a very strict way: after nodes come to consensus, we know that the supermajority agrees about the official ordering and the state resulting from that ordering. However, this strictness comes at great cost - extremely limited throughput. Monad loosens the strictness slightly, to great effect.\nOn finality\n​\nIn MonadBFT, finality is single-slot (1 second), and execution outcome will generally lag by less than 1 second for those using a full node. Let's unpack this a bit.\nFinality in Monad is single-slot (1 second)\n. If you submit a transaction, you will see the transaction's official order (among all other transactions) after a single block. There is no potential for reordering, barring malicious action from a supermajority of the network. This makes Monad's finality significantly faster than\nEthereum's\n(2 epochs, aka 12.8 minutes).\nThe execution outcome of a transaction\n(did it succeed or fail? what are the balances afterward?)\nwill generally lag finality by less than 1 second on full nodes.\nAnyone who needs to know the outcome of a transaction quickly (for example, a high-frequency trader wanting to know the status of an order) can run a full node. Monad is designed to minimize the cost of full nodes; see Hardware Requirements for further information.\nAnyone who wants to securely query the outcome of a transaction without running a full node can run a light client while querying a full node for balances with merkle proofs. In this case, queries will be lagged by the merkle root delay (\nD=10\nblocks, i.e. 10 seconds). Note that most users currently view the state of the blockchain using software (browser) wallets or via a block explorer. Neither of these usage patterns involve a light client.\nSome readers might mistakenly conflate the merkle root delay (\nD=10\nblocks) with finality and mistakenly assume that finality is 10 blocks. That's not true. The official transaction order is determined after 1 block, after which there will be no reorgs without Byzantine behavior from a supermajority.\nOn balance validation in Consensus\n​\nDeferring execution is incredibly powerful, as it allows execution and consensus to occur in parallel. This massively expands the time budget for execution.\nAn obvious objection is: now that consensus nodes have a delayed view of state, what prevents them from mistakenly including transactions from accounts that have spent all of their gas? This would create a Denial-of-Service vector.\nTo defend against this, Monad nodes validate that the balance of the account is sufficient to fullfill the maximum debit in the user's account associated with in-flight transactions. For each transaction, this is computed as a sum of the value transfer (\nvalue\n) and the amount of gas a user is willing to spend (\ngas_limit\n) multiplied by maximum amount a user is willing to pay per gas (\nmaxFeePerGas\n). If the available balance is not sufficient to pay the sum of value and maximum cost of the transaction, the transaction is not included in a block.\nYou can think of the available balance tracked by consensus as decrementing in realtime as transactions are included in blocks. Although the node's view of the full state is lagged, the available balance always reflects up-to-date expenditures.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/deferred-execution",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/consensus\" itemprop=\"item\"><span itemprop=\"name\">Consensus</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Deferred Execution</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Deferred Execution</h1></header>\n<p>One of the novel aspects of the Monad blockchain is that execution is decoupled from consensus.</p>\n<p>To recap, consensus is the process where Monad nodes come to agreement about the official ordering of transactions, while execution is the process of actually executing those transactions and updating the state.</p>\n<p>In Monad consensus, nodes come to agreement about the official ordering of transactions, but without either the leader or validating nodes having to have executed those transactions yet.</p>\n<p>That is, the leader proposes an ordering without yet knowing the resultant state root, and the validating nodes vote on block validity without knowing (for example) whether all of the transactions in the block execute without reverting.</p>\n<p>How can this be? And why does Monad do this?</p>\n<p>The answer is a cornerstone of Monad's design, and it allows Monad to unlock significant speedups that allow a single-shard blockchain to scale to millions of users.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"interleaving-execution-and-consensus-is-inefficient\">Interleaving execution and consensus is inefficient<a aria-label=\"Direct link to Interleaving execution and consensus is inefficient\" class=\"hash-link\" href=\"#interleaving-execution-and-consensus-is-inefficient\" title=\"Direct link to Interleaving execution and consensus is inefficient\">​</a></h2>\n<p>In Ethereum, execution is a prerequisite to consensus, so when nodes come to consensus on a block, they are agreeing on both (1) the list of transactions in the block, and (2) the merkle root summarizing all of the state after executing that list of transactions. As a result, the leader must execute all of the transactions in the proposed block <em>before</em> sharing the proposal, and the validating nodes must execute those transactions <em>before</em> responding with a vote.</p>\n<p>In this paradigm, the time budget for execution is extremely limited, since it has to happen twice <em>and</em> leave enough time for multiple rounds of cross-globe communication for consensus. Additionally, since execution will block consensus, the gas limit must be chosen extremely conservative, ensuring that the computation completes on all nodes within the budget even in the worst-case scenario.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"determined-ordering-implies-state-determinism\">Determined ordering implies state determinism<a aria-label=\"Direct link to Determined ordering implies state determinism\" class=\"hash-link\" href=\"#determined-ordering-implies-state-determinism\" title=\"Direct link to Determined ordering implies state determinism\">​</a></h2>\n<p>Here is an obvious but crucial insight: given an official ordering of transactions, the true state is completely determined. Execution is required to unveil the truth, but the truth is already determined.</p>\n<p>Monad takes advantage of this insight by removing the requirement that nodes execute prior to consensus. Node agreement is purely about the official ordering; each node executes the transactions in block <code>N</code> independently while commencing consensus on block <code>N+1</code>.</p>\n<p>This allows for a gas budget corresponding to the full block time, since execution merely needs to keep up with consensus. Additionally, this approach is more tolerant of variation in exact compute time, since execution only needs to keep up with consensus on average.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"delayed-merkle-roots-still-ensure-state-machine-replication\">Delayed merkle roots still ensure state machine replication<a aria-label=\"Direct link to Delayed merkle roots still ensure state machine replication\" class=\"hash-link\" href=\"#delayed-merkle-roots-still-ensure-state-machine-replication\" title=\"Direct link to Delayed merkle roots still ensure state machine replication\">​</a></h2>\n<p>The main objections one might have to the above are:</p>\n<ul>\n<li>What happens if one of the nodes is malicious, so doesn't execute the exact transactions specified in consensus? (For example, say it omits certain transactions, or just sets a state variable to an arbitrary value of its choice.)</li>\n<li>What happens if one of the nodes makes a mistake in execution?</li>\n</ul>\n<p>To address these concerns, in Monad the block proposals include a merkle root delayed by <code>D</code> blocks, where <code>D</code> is a systemwide parameter (currently anticipated to be 10). As a result of this delayed merkle root:</p>\n<ol>\n<li>After the network comes to consensus (2/3 majority vote) on block <code>N</code>, it means that the network has agreed that the official consequence of block <code>N-D</code> is a state rooted in merkle root <code>M</code>. Light clients can then query full nodes for merkle proofs of state variable values at block <code>N-D</code>.</li>\n<li>Any node with an error in execution at block <code>N-D</code> will fall out of consensus starting at block <code>N</code>. This will trigger a rollback on that node to the end state of block <code>N-D-1</code>, followed by re-execution of the transactions in block <code>N-D</code> (hopefully resulting in the merkle root matching), followed by a re-execution of the transactions in block <code>N-D+1</code>, <code>N-D+2</code>, etc.</li>\n</ol>\n<p>Ethereum's approach uses consensus to enforce <em>state machine replication</em> in a very strict way: after nodes come to consensus, we know that the supermajority agrees about the official ordering and the state resulting from that ordering. However, this strictness comes at great cost - extremely limited throughput. Monad loosens the strictness slightly, to great effect.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"on-finality\">On finality<a aria-label=\"Direct link to On finality\" class=\"hash-link\" href=\"#on-finality\" title=\"Direct link to On finality\">​</a></h2>\n<p>In MonadBFT, finality is single-slot (1 second), and execution outcome will generally lag by less than 1 second for those using a full node. Let's unpack this a bit.</p>\n<p><strong>Finality in Monad is single-slot (1 second)</strong>. If you submit a transaction, you will see the transaction's official order (among all other transactions) after a single block. There is no potential for reordering, barring malicious action from a supermajority of the network. This makes Monad's finality significantly faster than <a href=\"https://hackmd.io/@prysmaticlabs/finality\" rel=\"noopener noreferrer\" target=\"_blank\">Ethereum's</a> (2 epochs, aka 12.8 minutes).</p>\n<p><strong>The execution outcome of a transaction</strong> (did it succeed or fail? what are the balances afterward?) <strong>will generally lag finality by less than 1 second on full nodes.</strong> Anyone who needs to know the outcome of a transaction quickly (for example, a high-frequency trader wanting to know the status of an order) can run a full node. Monad is designed to minimize the cost of full nodes; see Hardware Requirements for further information.</p>\n<p>Anyone who wants to securely query the outcome of a transaction without running a full node can run a light client while querying a full node for balances with merkle proofs. In this case, queries will be lagged by the merkle root delay (<code>D=10</code> blocks, i.e. 10 seconds). Note that most users currently view the state of the blockchain using software (browser) wallets or via a block explorer. Neither of these usage patterns involve a light client.</p>\n<p>Some readers might mistakenly conflate the merkle root delay (<code>D=10</code> blocks) with finality and mistakenly assume that finality is 10 blocks. That's not true. The official transaction order is determined after 1 block, after which there will be no reorgs without Byzantine behavior from a supermajority.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"on-balance-validation-in-consensus\">On balance validation in Consensus<a aria-label=\"Direct link to On balance validation in Consensus\" class=\"hash-link\" href=\"#on-balance-validation-in-consensus\" title=\"Direct link to On balance validation in Consensus\">​</a></h2>\n<p>Deferring execution is incredibly powerful, as it allows execution and consensus to occur in parallel. This massively expands the time budget for execution.</p>\n<p>An obvious objection is: now that consensus nodes have a delayed view of state, what prevents them from mistakenly including transactions from accounts that have spent all of their gas? This would create a Denial-of-Service vector.</p>\n<p>To defend against this, Monad nodes validate that the balance of the account is sufficient to fullfill the maximum debit in the user's account associated with in-flight transactions. For each transaction, this is computed as a sum of the value transfer (<code>value</code>) and the amount of gas a user is willing to spend (<code>gas_limit</code>) multiplied by maximum amount a user is willing to pay per gas (<code>maxFeePerGas</code>). If the available balance is not sufficient to pay the sum of value and maximum cost of the transaction, the transaction is not included in a block.</p>\n<p>You can think of the available balance tracked by consensus as decrementing in realtime as transactions are included in blocks. Although the node's view of the full state is lagged, the available balance always reflects up-to-date expenditures.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/deferred-execution.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/deferred-execution"
    },
    "Local Mempool": {
      "content": "Local Mempool\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/local-mempool",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Local Mempool</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/local-mempool.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/local-mempool"
    },
    "MonadBFT": {
      "content": "Monad Architecture\nConsensus\nMonadBFT\nOn this page\nMonadBFT\nMonadBFT is a high-performance consensus mechanism for achieving agreement about the transaction ordering under partially synchronous conditions in the presence of Byzantine actors. It is a derivative of\nHotStuff\nwith the improvement proposed in\nJolteon\n/\nDiemBFT\n/\nFast-HotStuff\nwhich is the reduction from three rounds to two rounds by utilizing quadratic communication complexity in the event of leader timeout.\nMonadBFT is a pipelined two-phase BFT algorithm with optimistic responsiveness, and with linear communication overhead in the common case and quadratic communication in the case of a timeout. As in most BFT algorithms, communication proceeds in phases; at each phase, the leader sends a signed message to the voters, who send signed responses to the following leader. Pipelining allows the quorum certificate (QC) or timeout certificate (TC) for block\nk\nto piggyback on the proposal for block\nk+1.\nQuick facts\n​\nSybil resistance mechanism\nProof-of-Stake (PoS)\nBlock time\n1 second\nFinality\nSingle-slot\nDelegation allowed\nYes\nMempool\n​\nSee\nLocal Mempool\n.\nConsensus Protocol\n​\nMonadBFT is a pipelined consensus mechanism that proceeds in rounds. The below description gives a high-level intuitive understanding of the protocol.\nAs is customary, let there be\nn = 3f+1\nnodes, where\nf\nis the max number of Byzantine nodes, i.e.\n2f+1\n(i.e. 2/3) of the nodes are non-Byzantine. In the discussion below, let us also treat all nodes as having equal stake weight; in practice all thresholds can be expressed in terms of stake weight rather than in node count.\nIn each round, the leader sends out a new block as well as either a QC or a TC (more on this shortly) for the previous round.\nEach validator reviews that block for adherence to protocol and, if they agree, send signed YES votes to the leader of the next round. That leader derives a QC (quorum certificate) by aggregating (via threshold signatures) YES votes from\n2f+1\nvalidators. Note that communication in this case is\nlinear\n: leader sends block to validators, validators send votes directly to next leader.\nAlternatively, if the validator does not receive a valid block within a pre-specified amount of time, it multicasts a signed timeout message to\nall\nof its peers. This timeout message also includes the highest QC that the validator has observed. If any validator accumulates\n2f+1\ntimeout messages, it assembles these (again via threshold signatures) into a TC (timeout certificate) which it then sends directly to the next leader.\nEach validator finalizes the block proposed in round\nk\nupon receiving a QC for round\nk+1\n(i.e. in the communication from the leader of round\nk+2\n). Specifically:\nAlice, the leader of round\nk\n, sends a new block to everyone (along with either a QC or TC for round\nk-1\n; let's ignore that as it's not important).\nIf\n2f+1\nvalidators vote YES on that block by sending their votes to Bob (leader of round\nk+1\n), then the block in\nk+1\nwill include a QC for round\nk\n. However, seeing the QC for round\nk\nat this point\nis not enough for Valerie the validator to know that the block in round\nk\nhas been enshrined, since (for example) Bob could have been malicious and only sent the block to Valerie. All that Valerie can do is vote on block\nk+1\n, sending her votes to Charlie (leader of round\nk+2\n).\nIf\n2f+1\nvalidators vote YES on block\nk+1\n, then Charlie publishes a QC for round\nk+1\nas well as a block proposal for round\nk+2\n. As soon as Valerie receives this block, she knows that the block from round\nk\n(Alice's block) is finalized.\nSay that Bob had acted maliciously, either by sending an invalid block proposal at round\nk+1\n, or by sending it to fewer than\n2f+1\nvalidators. Then at least\nf+1\nvalidators will timeout, then triggering the other non-Byzantine validators to timeout, leading to at least one of the validators to produce a TC for round\nk+1\n. Then Charlie will publish the TC for round\nk+1\nin his proposal (he will have to in order to make a proposal, because no QC will be available for round\nk+1\n).\nWe refer to this commitment procedure as a 2-chain commit rule, because as soon as a validator sees 2 adjacent certified blocks\nB\nand\nB'\n, they can commit\nB\nand all of its ancestors.\nReferences:\nMaofan Yin, Dahlia Malkhi, Michael K. Reiter, Guy Golan Gueta, and Ittai Abraham.\nHotStuff: BFT Consensus in the Lens of Blockchain\n, 2018.\nMohammad M. Jalalzai, Jianyu Niu, Chen Feng, Fangyu Gai.\nFast-HotStuff: A Fast and Resilient HotStuff Protocol\n, 2020.\nRati Gelashvili, Lefteris Kokoris-Kogias, Alberto Sonnino, Alexander Spiegelman, and Zhuolun Xiang.\nJolteon and ditto: Network-adaptive efficient consensus with asynchronous fallback\n. arXiv preprint arXiv:2106.10362, 2021.\nThe Diem Team.\nDiemBFT v4: State machine replication in the diem blockchain\n. 2021.\nBLS Multi-Signatures\n​\nCertificates (QCs and TCs) can be naively implemented as a vector of ECDSA signatures on the secp256k1 curve. These certificates are explicit and easy to construct and verify. However, the size of the certificate is linear with the number of signers. It poses a limit to scaling because the certificate is included in almost every consensus message, except vote message.\nPairing-based BLS signature on the BLS12-381 curve helps with solving the scaling issue. The signatures can be incrementally aggregated into one signature. Verifying the single valid aggregated signature provides proof that the stakes associated with the public keys have all signed on the message.\nBLS signature is much slower than ECDSA signature. So for performance reasons, MonadBFT adopts a blended signature scheme where BLS signature is only used on aggregatable message types (votes and timeouts). Message integrity and authenticity is still provided by ECDSA signatures.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/monad-bft",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/consensus\" itemprop=\"item\"><span itemprop=\"name\">Consensus</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">MonadBFT</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>MonadBFT</h1></header>\n<p>MonadBFT is a high-performance consensus mechanism for achieving agreement about the transaction ordering under partially synchronous conditions in the presence of Byzantine actors. It is a derivative of <a href=\"https://arxiv.org/pdf/1803.05069.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">HotStuff</a> with the improvement proposed in <a href=\"https://arxiv.org/pdf/2106.10362.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Jolteon</a>/<a href=\"https://developers.diem.com/papers/diem-consensus-state-machine-replication-in-the-diem-blockchain/2021-08-17.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">DiemBFT</a>/<a href=\"https://arxiv.org/abs/2010.11454\" rel=\"noopener noreferrer\" target=\"_blank\">Fast-HotStuff</a> which is the reduction from three rounds to two rounds by utilizing quadratic communication complexity in the event of leader timeout.</p>\n<p>MonadBFT is a pipelined two-phase BFT algorithm with optimistic responsiveness, and with linear communication overhead in the common case and quadratic communication in the case of a timeout. As in most BFT algorithms, communication proceeds in phases; at each phase, the leader sends a signed message to the voters, who send signed responses to the following leader. Pipelining allows the quorum certificate (QC) or timeout certificate (TC) for block <code>k</code> to piggyback on the proposal for block <code>k+1.</code></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"quick-facts\">Quick facts<a aria-label=\"Direct link to Quick facts\" class=\"hash-link\" href=\"#quick-facts\" title=\"Direct link to Quick facts\">​</a></h2>\n<table data-header-hidden=\"true\"><thead><tr><th width=\"267\"></th><th></th></tr></thead><tbody><tr><td>Sybil resistance mechanism</td><td>Proof-of-Stake (PoS)</td></tr><tr><td>Block time</td><td>1 second</td></tr><tr><td>Finality</td><td>Single-slot</td></tr><tr><td>Delegation allowed</td><td>Yes</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mempool\">Mempool<a aria-label=\"Direct link to Mempool\" class=\"hash-link\" href=\"#mempool\" title=\"Direct link to Mempool\">​</a></h2>\n<p>See <a href=\"/monad-arch/consensus/local-mempool\">Local Mempool</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"consensus-protocol\">Consensus Protocol<a aria-label=\"Direct link to Consensus Protocol\" class=\"hash-link\" href=\"#consensus-protocol\" title=\"Direct link to Consensus Protocol\">​</a></h2>\n<p>MonadBFT is a pipelined consensus mechanism that proceeds in rounds. The below description gives a high-level intuitive understanding of the protocol.</p>\n<p>As is customary, let there be <code>n = 3f+1</code> nodes, where <code>f</code> is the max number of Byzantine nodes, i.e. <code>2f+1</code> (i.e. 2/3) of the nodes are non-Byzantine. In the discussion below, let us also treat all nodes as having equal stake weight; in practice all thresholds can be expressed in terms of stake weight rather than in node count.</p>\n<ul>\n<li>In each round, the leader sends out a new block as well as either a QC or a TC (more on this shortly) for the previous round.</li>\n<li>Each validator reviews that block for adherence to protocol and, if they agree, send signed YES votes to the leader of the next round. That leader derives a QC (quorum certificate) by aggregating (via threshold signatures) YES votes from <code>2f+1</code> validators. Note that communication in this case is <em>linear</em>: leader sends block to validators, validators send votes directly to next leader.<!-- -->\n<ul>\n<li>Alternatively, if the validator does not receive a valid block within a pre-specified amount of time, it multicasts a signed timeout message to <em>all</em> of its peers. This timeout message also includes the highest QC that the validator has observed. If any validator accumulates <code>2f+1</code> timeout messages, it assembles these (again via threshold signatures) into a TC (timeout certificate) which it then sends directly to the next leader.</li>\n</ul>\n</li>\n<li>Each validator finalizes the block proposed in round <code>k</code> upon receiving a QC for round <code>k+1</code> (i.e. in the communication from the leader of round <code>k+2</code>). Specifically:<!-- -->\n<ul>\n<li>Alice, the leader of round <code>k</code>, sends a new block to everyone (along with either a QC or TC for round <code>k-1</code>; let's ignore that as it's not important).</li>\n<li>If <code>2f+1</code> validators vote YES on that block by sending their votes to Bob (leader of round <code>k+1</code>), then the block in <code>k+1</code> will include a QC for round <code>k</code>. However, seeing the QC for round <code>k</code> <em>at this point</em> is not enough for Valerie the validator to know that the block in round <code>k</code> has been enshrined, since (for example) Bob could have been malicious and only sent the block to Valerie. All that Valerie can do is vote on block <code>k+1</code>, sending her votes to Charlie (leader of round <code>k+2</code>).</li>\n<li>If <code>2f+1</code> validators vote YES on block <code>k+1</code>, then Charlie publishes a QC for round <code>k+1</code> as well as a block proposal for round <code>k+2</code>. As soon as Valerie receives this block, she knows that the block from round <code>k</code> (Alice's block) is finalized.</li>\n<li>Say that Bob had acted maliciously, either by sending an invalid block proposal at round <code>k+1</code>, or by sending it to fewer than <code>2f+1</code> validators. Then at least <code>f+1</code> validators will timeout, then triggering the other non-Byzantine validators to timeout, leading to at least one of the validators to produce a TC for round <code>k+1</code>. Then Charlie will publish the TC for round <code>k+1</code> in his proposal (he will have to in order to make a proposal, because no QC will be available for round <code>k+1</code>).</li>\n<li>We refer to this commitment procedure as a 2-chain commit rule, because as soon as a validator sees 2 adjacent certified blocks <code>B</code> and <code>B'</code>, they can commit <code>B</code> and all of its ancestors.</li>\n</ul>\n</li>\n</ul>\n<p>References:</p>\n<ul>\n<li>Maofan Yin, Dahlia Malkhi, Michael K. Reiter, Guy Golan Gueta, and Ittai Abraham. <a href=\"https://arxiv.org/abs/1803.05069\" rel=\"noopener noreferrer\" target=\"_blank\">HotStuff: BFT Consensus in the Lens of Blockchain</a>, 2018.</li>\n<li>Mohammad M. Jalalzai, Jianyu Niu, Chen Feng, Fangyu Gai. <a href=\"https://arxiv.org/abs/2010.11454\" rel=\"noopener noreferrer\" target=\"_blank\">Fast-HotStuff: A Fast and Resilient HotStuff Protocol</a>, 2020.</li>\n<li>Rati Gelashvili, Lefteris Kokoris-Kogias, Alberto Sonnino, Alexander Spiegelman, and Zhuolun Xiang. <a href=\"https://arxiv.org/pdf/2106.10362.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Jolteon and ditto: Network-adaptive efficient consensus with asynchronous fallback</a>. arXiv preprint arXiv:2106.10362, 2021.</li>\n<li>The Diem Team. <a href=\"https://developers.diem.com/papers/diem-consensus-state-machine-replication-in-the-diem-blockchain/2021-08-17.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">DiemBFT v4: State machine replication in the diem blockchain</a>. 2021.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"bls-multi-signatures\">BLS Multi-Signatures<a aria-label=\"Direct link to BLS Multi-Signatures\" class=\"hash-link\" href=\"#bls-multi-signatures\" title=\"Direct link to BLS Multi-Signatures\">​</a></h2>\n<p>Certificates (QCs and TCs) can be naively implemented as a vector of ECDSA signatures on the secp256k1 curve. These certificates are explicit and easy to construct and verify. However, the size of the certificate is linear with the number of signers. It poses a limit to scaling because the certificate is included in almost every consensus message, except vote message.</p>\n<p>Pairing-based BLS signature on the BLS12-381 curve helps with solving the scaling issue. The signatures can be incrementally aggregated into one signature. Verifying the single valid aggregated signature provides proof that the stakes associated with the public keys have all signed on the message.</p>\n<p>BLS signature is much slower than ECDSA signature. So for performance reasons, MonadBFT adopts a blended signature scheme where BLS signature is only used on aggregatable message types (votes and timeouts). Message integrity and authenticity is still provided by ECDSA signatures.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/monad-bft.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/monad-bft"
    },
    "RaptorCast": {
      "content": "RaptorCast\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/raptorcast",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>RaptorCast</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/raptorcast.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/raptorcast"
    },
    "State Sync": {
      "content": "State Sync\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/consensus/state-sync",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>State Sync</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/consensus/state-sync.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/consensus/state-sync"
    },
    "Execution": {
      "content": "Execution\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/execution/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Execution</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/execution/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/execution"
    },
    "Gas Pricing": {
      "content": "Gas Pricing\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/execution/gas-pricing",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Gas Pricing</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/execution/gas-pricing.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/execution/gas-pricing"
    },
    "MonadDb": {
      "content": "Monad Architecture\nExecution\nMonadDb\nMonadDb\nMonadDb is a custom database for storing blockchain state.\nMost Ethereum clients use key-value databases that are implemented as either B-Tree (an example is\nLMDB\n) or LSM-Tree (examples are\nLevelD\nB\nand\nRocksDB\n) data structures. However Ethereum uses the\nMerkle Patricia Trie\n(MPT) data structure for storing state. This results in a suboptimal solution where one data structure is embedded into another data structure of a different type. MonadDb implements a\nPatricia Trie\ndata structure natively, both on-disk and in-memory.\nMonad executes multiple transactions in\nparallel\n. When one transaction needs to read state from disk, one should not block waiting for that operation to complete - instead one should initiate the read and then start working on another transaction in the meantime. Therefore the problem needs\nasynchronous i/o\n(async i/o) for the database. The above mentioned key-value databases lack proper async i/o support (although there are some efforts to improve in this area). MonadDb fully utilizes the latest kernel support for async i/o (on Linux this is\nio_uring\n). This avoids needing to spawn a large number of kernel threads to handle pending i/o requests in an attempt to perform work asynchronously.\nMonadDb makes a number of other optimizations related to i/o, such as bypassing the filesystem which add expensive overhead.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/execution/monaddb",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/execution\" itemprop=\"item\"><span itemprop=\"name\">Execution</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">MonadDb</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"theme-doc-markdown markdown\"><header><h1>MonadDb</h1></header>\n<p>MonadDb is a custom database for storing blockchain state.</p>\n<p>Most Ethereum clients use key-value databases that are implemented as either B-Tree (an example is <a href=\"https://www.symas.com/lmdb\" rel=\"noopener noreferrer\" target=\"_blank\">LMDB</a>) or LSM-Tree (examples are <a href=\"https://github.com/google/leveldb\" rel=\"noopener noreferrer\" target=\"_blank\">LevelD</a><a href=\"https://github.com/google/leveldb\" rel=\"noopener noreferrer\" target=\"_blank\">B</a> and <a href=\"https://rocksdb.org/\" rel=\"noopener noreferrer\" target=\"_blank\">RocksDB</a>) data structures. However Ethereum uses the <a href=\"https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\" rel=\"noopener noreferrer\" target=\"_blank\">Merkle Patricia Trie</a> (MPT) data structure for storing state. This results in a suboptimal solution where one data structure is embedded into another data structure of a different type. MonadDb implements a <a href=\"https://en.wikipedia.org/wiki/Radix_tree\" rel=\"noopener noreferrer\" target=\"_blank\">Patricia Trie</a> data structure natively, both on-disk and in-memory.</p>\n<p>Monad executes multiple transactions in <a href=\"/monad-arch/execution/parallel-execution\">parallel</a>. When one transaction needs to read state from disk, one should not block waiting for that operation to complete - instead one should initiate the read and then start working on another transaction in the meantime. Therefore the problem needs <a href=\"/monad-arch/concepts/asynchronous-io\">asynchronous i/o</a> (async i/o) for the database. The above mentioned key-value databases lack proper async i/o support (although there are some efforts to improve in this area). MonadDb fully utilizes the latest kernel support for async i/o (on Linux this is <a href=\"https://unixism.net/loti/index.html\" rel=\"noopener noreferrer\" target=\"_blank\">io_uring</a>). This avoids needing to spawn a large number of kernel threads to handle pending i/o requests in an attempt to perform work asynchronously.</p>\n<p>MonadDb makes a number of other optimizations related to i/o, such as bypassing the filesystem which add expensive overhead.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/execution/monaddb.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/execution/monaddb"
    },
    "Parallel Execution": {
      "content": "Monad Architecture\nExecution\nParallel Execution\nOn this page\nParallel Execution\nMonad executes transactions in parallel.  While at first it might seem like this implies different execution semantics than exist in Ethereum, it actually does not.  Monad blocks are the same as Ethereum blocks - a linearly ordered set of transactions.  The result of executing the transactions in a block is identical between Monad and Ethereum.\nOptimistic Execution\n​\nAt a base level, Monad uses optimistic execution. This means that Monad will start executing transactions before earlier transactions in the block have completed.  Sometimes (but not always) this results in incorrect execution.\nConsider two transactions (in this order in the block):\nTransaction 1 reads and updates the balance of account A (for example, it receives a transfer from account B).\nTransaction 2 also reads and updates the balance of account A (for example, it makes a transfer to account C).\nIf these transactions are run in parallel and transaction 2 starts running before transaction 1 has completed, then the balance it reads for account A may be different than if they were run sequentially.  This could result in incorrect execution.\nThe way optimistic execution solves this is by tracking the inputs used while executing transaction 2 and comparing them to the outputs of transaction 1.  If they differ, we have detected that transaction 2 used incorrect data while executing and it needs to be executed again with the correct data.\nWhile Monad executes transactions in parallel, the updated state for each transaction is \"merged\" sequentially in order to check the condition mentioned above.\nRelated computer science topics are\noptimistic concurrency control\n(OCC) and\nsoftware transactional memory\n(STM).\nOptimistic Execution Implications\n​\nIn a naïve implementation of optimistic execution, one doesn't detect that a transaction needs to be executed again until earlier transactions in the block have completed.  At that time, the state updates for all the earlier transactions have been merged so it's not possible for the transaction to fail due to optimistic execution a second time.\nThere are steps in executing a transaction that do not depend on state. An example is signature recovery, which is an expensive computation.  This work does not need to be repeated when executing the transaction again.\nFurthermore, when executing a transaction again due to failure to merge, often the account(s) and storage accessed will not change.  This state is still be cached in memory, so again this is expensive work that does not need to be repeated.\nScheduling\n​\nA naïve implementation of optimistic execution will try to start executing the next transaction when the processor has available resources.  There may be long \"chains\" of transactions which depend on each other in the block.  Executing these transactions in parallel would result in a significant number of failures.\nDetermining dependencies between transactions ahead of time allows Monad to avoid this wasted effort by only scheduling transactions for execution when prerequisite transactions have completed.  Monad has a static code analyzer that tries to make such predictions.  In a good case Monad can predict many dependencies ahead of time; in the worst case Monad falls back to the naïve implementation.\nFurther Work\n​\nThere are other opportunities to avoid re-executing transactions which are still being explored.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/execution/parallel-execution",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/execution\" itemprop=\"item\"><span itemprop=\"name\">Execution</span></a><meta content=\"2\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Parallel Execution</span><meta content=\"3\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Parallel Execution</h1></header>\n<p>Monad executes transactions in parallel.  While at first it might seem like this implies different execution semantics than exist in Ethereum, it actually does not.  Monad blocks are the same as Ethereum blocks - a linearly ordered set of transactions.  The result of executing the transactions in a block is identical between Monad and Ethereum.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optimistic-execution\">Optimistic Execution<a aria-label=\"Direct link to Optimistic Execution\" class=\"hash-link\" href=\"#optimistic-execution\" title=\"Direct link to Optimistic Execution\">​</a></h4>\n<p>At a base level, Monad uses optimistic execution. This means that Monad will start executing transactions before earlier transactions in the block have completed.  Sometimes (but not always) this results in incorrect execution.</p>\n<p>Consider two transactions (in this order in the block):</p>\n<ol>\n<li>Transaction 1 reads and updates the balance of account A (for example, it receives a transfer from account B).</li>\n<li>Transaction 2 also reads and updates the balance of account A (for example, it makes a transfer to account C).</li>\n</ol>\n<p>If these transactions are run in parallel and transaction 2 starts running before transaction 1 has completed, then the balance it reads for account A may be different than if they were run sequentially.  This could result in incorrect execution.</p>\n<p>The way optimistic execution solves this is by tracking the inputs used while executing transaction 2 and comparing them to the outputs of transaction 1.  If they differ, we have detected that transaction 2 used incorrect data while executing and it needs to be executed again with the correct data.</p>\n<p>While Monad executes transactions in parallel, the updated state for each transaction is \"merged\" sequentially in order to check the condition mentioned above.</p>\n<p>Related computer science topics are <a href=\"https://en.wikipedia.org/wiki/Optimistic_concurrency_control\" rel=\"noopener noreferrer\" target=\"_blank\">optimistic concurrency control</a> (OCC) and <a href=\"https://en.wikipedia.org/wiki/Software_transactional_memory\" rel=\"noopener noreferrer\" target=\"_blank\">software transactional memory</a> (STM).</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optimistic-execution-implications\">Optimistic Execution Implications<a aria-label=\"Direct link to Optimistic Execution Implications\" class=\"hash-link\" href=\"#optimistic-execution-implications\" title=\"Direct link to Optimistic Execution Implications\">​</a></h4>\n<p>In a naïve implementation of optimistic execution, one doesn't detect that a transaction needs to be executed again until earlier transactions in the block have completed.  At that time, the state updates for all the earlier transactions have been merged so it's not possible for the transaction to fail due to optimistic execution a second time.</p>\n<p>There are steps in executing a transaction that do not depend on state. An example is signature recovery, which is an expensive computation.  This work does not need to be repeated when executing the transaction again.</p>\n<p>Furthermore, when executing a transaction again due to failure to merge, often the account(s) and storage accessed will not change.  This state is still be cached in memory, so again this is expensive work that does not need to be repeated.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"scheduling\">Scheduling<a aria-label=\"Direct link to Scheduling\" class=\"hash-link\" href=\"#scheduling\" title=\"Direct link to Scheduling\">​</a></h4>\n<p>A naïve implementation of optimistic execution will try to start executing the next transaction when the processor has available resources.  There may be long \"chains\" of transactions which depend on each other in the block.  Executing these transactions in parallel would result in a significant number of failures.</p>\n<p>Determining dependencies between transactions ahead of time allows Monad to avoid this wasted effort by only scheduling transactions for execution when prerequisite transactions have completed.  Monad has a static code analyzer that tries to make such predictions.  In a good case Monad can predict many dependencies ahead of time; in the worst case Monad falls back to the naïve implementation.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"further-work\">Further Work<a aria-label=\"Direct link to Further Work\" class=\"hash-link\" href=\"#further-work\" title=\"Direct link to Further Work\">​</a></h4>\n<p>There are other opportunities to avoid re-executing transactions which are still being explored.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/execution/parallel-execution.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/execution/parallel-execution"
    },
    "Hardware Requirements": {
      "content": "Monad Architecture\nHardware Requirements\nHardware Requirements\nThe following hardware requirements are expected to run a Monad full node:\nCPU: 16 core CPU\nMemory: 32 GB RAM\nStorage: 2 TB NVMe SSD\nBandwidth: 100 Mb/s\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/hardware-requirements",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Hardware Requirements</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"theme-doc-markdown markdown\"><header><h1>Hardware Requirements</h1></header>\n<p>The following hardware requirements are expected to run a Monad full node:</p>\n<ul>\n<li>CPU: 16 core CPU</li>\n<li>Memory: 32 GB RAM</li>\n<li>Storage: 2 TB NVMe SSD</li>\n<li>Bandwidth: 100 Mb/s</li>\n</ul></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/hardware-requirements.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/hardware-requirements"
    },
    "Other Details": {
      "content": "Monad Architecture\nOther Details\nOn this page\nOther Details\nAccounts\n​\nAccounts in Monad are identical to\nEthereum accounts\n.  Accounts use the same address space (20-byte addresses using ECDSA).  As in Ethereum, there are Externally-Owned Accounts (EOAs) and Contract Accounts.\nTransactions\n​\nThe transaction format in Monad\nmatches Ethereum\n, i.e. it complies with\nEIP-2718\n, and transactions are encoded with\nRLP\n.\nAccess lists (\nEIP-2930\n) are supported but not required.\nLinearity of Blocks and Transactions\n​\nBlocks are still linear, as are transactions within a block.  Parallelism is utilized strictly for efficiency; it never affects the true outcome or end state of a series of transactions.\nGas\n​\nGas\n(perhaps more clearly named \"compute units\") functions as it does in Ethereum, i.e. each opcode costs a certain amount of gas.  Gas costs per opcode are identical to Ethereum in Monad, although this is subject to change in the future.\nWhen a user submits a transaction, they include a gas limit (a max number of units of gas that this function call can consume before erroring) as well as a gas price (a bid, in units of native token, per unit of gas).\nLeaders in the default Monad client use a priority gas auction (PGA) to order transactions, i.e. they order transactions in descending gas price order.  In future times there may be alternative mechanisms for transaction ordering.  The choice of order is orthogonal to everything that happens downstream; valid choice of order is not enshrined into the Monad protocol.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/other-details",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Other Details</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Other Details</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"accounts\">Accounts<a aria-label=\"Direct link to Accounts\" class=\"hash-link\" href=\"#accounts\" title=\"Direct link to Accounts\">​</a></h2>\n<p>Accounts in Monad are identical to <a href=\"https://ethereum.org/en/developers/docs/accounts/\" rel=\"noopener noreferrer\" target=\"_blank\">Ethereum accounts</a>.  Accounts use the same address space (20-byte addresses using ECDSA).  As in Ethereum, there are Externally-Owned Accounts (EOAs) and Contract Accounts.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"transactions\">Transactions<a aria-label=\"Direct link to Transactions\" class=\"hash-link\" href=\"#transactions\" title=\"Direct link to Transactions\">​</a></h2>\n<p>The transaction format in Monad <a href=\"https://ethereum.org/en/developers/docs/transactions/\" rel=\"noopener noreferrer\" target=\"_blank\">matches Ethereum</a>, i.e. it complies with <a href=\"https://eips.ethereum.org/EIPS/eip-2718\" rel=\"noopener noreferrer\" target=\"_blank\">EIP-2718</a>, and transactions are encoded with <a href=\"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\" rel=\"noopener noreferrer\" target=\"_blank\">RLP</a>.</p>\n<p>Access lists (<a href=\"https://eips.ethereum.org/EIPS/eip-2930\" rel=\"noopener noreferrer\" target=\"_blank\">EIP-2930</a>) are supported but not required.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"linearity-of-blocks-and-transactions\">Linearity of Blocks and Transactions<a aria-label=\"Direct link to Linearity of Blocks and Transactions\" class=\"hash-link\" href=\"#linearity-of-blocks-and-transactions\" title=\"Direct link to Linearity of Blocks and Transactions\">​</a></h2>\n<p>Blocks are still linear, as are transactions within a block.  Parallelism is utilized strictly for efficiency; it never affects the true outcome or end state of a series of transactions.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"gas\">Gas<a aria-label=\"Direct link to Gas\" class=\"hash-link\" href=\"#gas\" title=\"Direct link to Gas\">​</a></h2>\n<p><a href=\"https://ethereum.org/en/developers/docs/gas/\" rel=\"noopener noreferrer\" target=\"_blank\">Gas</a> (perhaps more clearly named \"compute units\") functions as it does in Ethereum, i.e. each opcode costs a certain amount of gas.  Gas costs per opcode are identical to Ethereum in Monad, although this is subject to change in the future.</p>\n<p>When a user submits a transaction, they include a gas limit (a max number of units of gas that this function call can consume before erroring) as well as a gas price (a bid, in units of native token, per unit of gas).</p>\n<p>Leaders in the default Monad client use a priority gas auction (PGA) to order transactions, i.e. they order transactions in descending gas price order.  In future times there may be alternative mechanisms for transaction ordering.  The choice of order is orthogonal to everything that happens downstream; valid choice of order is not enshrined into the Monad protocol.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/other-details.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/other-details"
    },
    "Transaction Lifecycle in Monad": {
      "content": "Monad Architecture\nTransaction Lifecycle in Monad\nOn this page\nTransaction Lifecycle in Monad\nTransaction Submission\n​\nThe lifecycle of a transaction starts with a user preparing a signed transaction and submitting it to an RPC node.\nTransactions are typically prepared by an application frontend, then presented to the user's wallet for signing. Most wallets make an\neth_estimateGas\nRPC call to populate the gas\nlimit\nfor this transaction, although the user can also override this in their wallet. The user is also typically asked to choose a gas\nprice\nfor the transaction, which is a number of NativeTokens per unit of gas.\nAfter the user approves the signing in their wallet, the signed transaction is submitted to an RPC node using the\neth_sendTransaction\nor\neth_sendRawTransaction\nAPI call.\nMempool Propagation\n​\nThe RPC node forwards the pending transaction to other Monad nodes that are participating in consensus. The set of pending transactions is colloquially referred to as the 'mempool'. See\nMempool\nfor additional details on mempool behavior.\nFor spam prevention reasons, nodes add the transaction to their mempool only if there is sufficient gas in the\navailable balance\n.\nBlock Inclusion\n​\nMonadBFT uses a rotating leader mechanism to produce blocks. Each round, a leader assembles a block from the list of pending transactions. After choosing a transaction to be included in the block, the leader decrements the available balance with the maximum cost user is willing to pay for the transaction computed as a\nvalue + gas_limit * maxFeePerGas\n.\nBlocks are propagated through the network as discussed in\nMonadBFT\n. The quorum certificate (QC) for this block is propagated in the subsequent round of consensus (i.e. is sent out by the next leader). After seeing the QC, voting nodes send each other votes; when a node sees 2/3 of the stake weight vote yes, it finalizes that block.\nOnce the block is finalized, the transaction has officially \"occurred\" in the history of the blockchain. Since its order is determined, its truth value (i.e., whether it succeeds or fails, and what the outcome is immediately after that execution) is determined.\nLocal Execution\n​\nAs soon as a node finalizes a block, it begins executing the transactions from that block. For efficiency reasons, transactions are executed\noptimistically in parallel\n, but it is as if the transactions were executed serially, since results are always committed in the original order.\nQuerying the Outcome\n​\nThe user can query the result of the transaction by calling\neth_getTransactionByHash\nor\neth_getTransactionReceipt\non any RPC node. The RPC node will return as soon as execution completes locally on the node.\nEdit this page",
      "url": "https://docs.monad.xyz/monad-arch/transaction-lifecycle",
      "html": "<article><nav aria-label=\"Breadcrumbs\" class=\"theme-doc-breadcrumbs breadcrumbsContainer_Z_bl\"><ul class=\"breadcrumbs\" itemscope=\"\" itemtype=\"https://schema.org/BreadcrumbList\"><li class=\"breadcrumbs__item\"><a aria-label=\"Home page\" class=\"breadcrumbs__link\" href=\"/\"><svg class=\"breadcrumbHomeIcon_YNFT\" viewbox=\"0 0 24 24\"><path d=\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\" fill=\"currentColor\"></path></svg></a></li><li class=\"breadcrumbs__item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><a class=\"breadcrumbs__link\" href=\"/category/monad-architecture\" itemprop=\"item\"><span itemprop=\"name\">Monad Architecture</span></a><meta content=\"1\" itemprop=\"position\"/></li><li class=\"breadcrumbs__item breadcrumbs__item--active\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"https://schema.org/ListItem\"><span class=\"breadcrumbs__link\" itemprop=\"name\">Transaction Lifecycle in Monad</span><meta content=\"2\" itemprop=\"position\"/></li></ul></nav><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Transaction Lifecycle in Monad</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"transaction-submission\">Transaction Submission<a aria-label=\"Direct link to Transaction Submission\" class=\"hash-link\" href=\"#transaction-submission\" title=\"Direct link to Transaction Submission\">​</a></h2>\n<p>The lifecycle of a transaction starts with a user preparing a signed transaction and submitting it to an RPC node.</p>\n<p>Transactions are typically prepared by an application frontend, then presented to the user's wallet for signing. Most wallets make an <code>eth_estimateGas</code> RPC call to populate the gas <strong>limit</strong> for this transaction, although the user can also override this in their wallet. The user is also typically asked to choose a gas <strong>price</strong> for the transaction, which is a number of NativeTokens per unit of gas.</p>\n<p>After the user approves the signing in their wallet, the signed transaction is submitted to an RPC node using the <code>eth_sendTransaction</code> or <code>eth_sendRawTransaction</code> API call.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"mempool-propagation\">Mempool Propagation<a aria-label=\"Direct link to Mempool Propagation\" class=\"hash-link\" href=\"#mempool-propagation\" title=\"Direct link to Mempool Propagation\">​</a></h2>\n<p>The RPC node forwards the pending transaction to other Monad nodes that are participating in consensus. The set of pending transactions is colloquially referred to as the 'mempool'. See <a href=\"/monad-arch/consensus/local-mempool\">Mempool</a> for additional details on mempool behavior.  </p>\n<p>For spam prevention reasons, nodes add the transaction to their mempool only if there is sufficient gas in the <a href=\"/monad-arch/consensus/deferred-execution\">available balance</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"block-inclusion\">Block Inclusion<a aria-label=\"Direct link to Block Inclusion\" class=\"hash-link\" href=\"#block-inclusion\" title=\"Direct link to Block Inclusion\">​</a></h2>\n<p>MonadBFT uses a rotating leader mechanism to produce blocks. Each round, a leader assembles a block from the list of pending transactions. After choosing a transaction to be included in the block, the leader decrements the available balance with the maximum cost user is willing to pay for the transaction computed as a <code>value + gas_limit * maxFeePerGas</code>.</p>\n<p>Blocks are propagated through the network as discussed in <a href=\"/monad-arch/consensus/monad-bft\">MonadBFT</a>. The quorum certificate (QC) for this block is propagated in the subsequent round of consensus (i.e. is sent out by the next leader). After seeing the QC, voting nodes send each other votes; when a node sees 2/3 of the stake weight vote yes, it finalizes that block.</p>\n<p>Once the block is finalized, the transaction has officially \"occurred\" in the history of the blockchain. Since its order is determined, its truth value (i.e., whether it succeeds or fails, and what the outcome is immediately after that execution) is determined.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"local-execution\">Local Execution<a aria-label=\"Direct link to Local Execution\" class=\"hash-link\" href=\"#local-execution\" title=\"Direct link to Local Execution\">​</a></h2>\n<p>As soon as a node finalizes a block, it begins executing the transactions from that block. For efficiency reasons, transactions are executed <a href=\"/monad-arch/execution/parallel-execution\">optimistically in parallel</a>, but it is as if the transactions were executed serially, since results are always committed in the original order.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"querying-the-outcome\">Querying the Outcome<a aria-label=\"Direct link to Querying the Outcome\" class=\"hash-link\" href=\"#querying-the-outcome\" title=\"Direct link to Querying the Outcome\">​</a></h2>\n<p>The user can query the result of the transaction by calling <code>eth_getTransactionByHash</code> or <code>eth_getTransactionReceipt</code> on any RPC node. The RPC node will return as soon as execution completes locally on the node.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/monad-arch/transaction-lifecycle.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "monad-arch/transaction-lifecycle"
    }
  },
  "tooling": {
    "Tooling and Infrastructure": {
      "content": "Tooling and Infrastructure\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Tooling and Infrastructure</h1></header></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/README.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra"
    },
    "Account Abstraction": {
      "content": "Account Abstraction\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/account-abstraction",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Account Abstraction</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/account-abstraction.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/account-abstraction"
    },
    "Analytics": {
      "content": "Analytics\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/analytics",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Analytics</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/analytics.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/analytics"
    },
    "Block Explorers": {
      "content": "Block Explorers\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/block-explorers",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Block Explorers</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/block-explorers.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/block-explorers"
    },
    "Contract Templates": {
      "content": "On this page\nContract Templates\nOpen Zeppelin\n​\nDummy Text\nCookbook.dev\n​\nDummy Text\nThirdWeb\n​\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/contract-templates",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Contract Templates</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"open-zeppelin\">Open Zeppelin<a aria-label=\"Direct link to Open Zeppelin\" class=\"hash-link\" href=\"#open-zeppelin\" title=\"Direct link to Open Zeppelin\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"cookbookdev\">Cookbook.dev<a aria-label=\"Direct link to Cookbook.dev\" class=\"hash-link\" href=\"#cookbookdev\" title=\"Direct link to Cookbook.dev\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thirdweb\">ThirdWeb<a aria-label=\"Direct link to ThirdWeb\" class=\"hash-link\" href=\"#thirdweb\" title=\"Direct link to ThirdWeb\">​</a></h2>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/contract-templates.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/contract-templates"
    },
    "Cross-Chain": {
      "content": "Cross-Chain\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/cross-chain",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Cross-Chain</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/cross-chain.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/cross-chain"
    },
    "Data Indexers": {
      "content": "Data Indexers\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/data-indexers",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Data Indexers</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/data-indexers.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/data-indexers"
    },
    "Debugging Onchain": {
      "content": "On this page\nDebugging Onchain\nTransaction introspection/tracing\n​\nTenderly\nEthTx Transaction Decoder\nhttps://openchain.xyz/\nBloxy\nhttps://github.com/naddison36/tx2uml\n- OS tools for generating UML diagrams\nhttps://github.com/apeworx/evm-trace\n- tracing tools\nContract Decompilation\n​\nhttps://oko.palkeo.com/\n: a hosted version of the\nPanoramix\ndecompiler\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/debugging-onchain",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Debugging Onchain</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"transaction-introspectiontracing\">Transaction introspection/tracing<a aria-label=\"Direct link to Transaction introspection/tracing\" class=\"hash-link\" href=\"#transaction-introspectiontracing\" title=\"Direct link to Transaction introspection/tracing\">​</a></h2>\n<ul>\n<li><a href=\"https://dashboard.tenderly.co/explorer\" rel=\"noopener noreferrer\" target=\"_blank\">Tenderly</a></li>\n<li><a href=\"https://ethtx.info/\" rel=\"noopener noreferrer\" target=\"_blank\">EthTx Transaction Decoder</a></li>\n<li><a href=\"https://openchain.xyz/\" rel=\"noopener noreferrer\" target=\"_blank\">https://openchain.xyz/</a></li>\n<li><a href=\"https://bloxy.info/\" rel=\"noopener noreferrer\" target=\"_blank\">Bloxy</a></li>\n<li><a href=\"https://github.com/naddison36/tx2uml\" rel=\"noopener noreferrer\" target=\"_blank\">https://github.com/naddison36/tx2uml</a> - OS tools for generating UML diagrams</li>\n<li><a href=\"https://github.com/apeworx/evm-trace\" rel=\"noopener noreferrer\" target=\"_blank\">https://github.com/apeworx/evm-trace</a> - tracing tools</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"contract-decompilation\">Contract Decompilation<a aria-label=\"Direct link to Contract Decompilation\" class=\"hash-link\" href=\"#contract-decompilation\" title=\"Direct link to Contract Decompilation\">​</a></h2>\n<ul>\n<li><a href=\"https://oko.palkeo.com/\" rel=\"noopener noreferrer\" target=\"_blank\">https://oko.palkeo.com/</a>: a hosted version of the <a href=\"https://github.com/palkeo/panoramix\" rel=\"noopener noreferrer\" target=\"_blank\">Panoramix</a> decompiler</li>\n</ul></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/debugging-onchain.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/debugging-onchain"
    },
    "Libraries": {
      "content": "On this page\nLibraries\nInteracting with the Ethereum RPC API\n​\nFrontends for dapps typically use JavaScript or Python to submit read or write queries to an RPC node. This code is typically referred to as the \"client side\", as web developers can roughly equate the blockchain to a backend server.\nA few libraries provide standard methods for submitting queries or transactions to an RPC node:\nPython:\nweb3.py\nJavascript:\nweb3.js\nethers.js\nTo this end\nWeb3.js\nand\nWeb3.py\n, Java Script and Python libraries respectively, have developed to make interacting with blockchains more intuitive for web developers.\nHere is a quick example for creating a frontend:\ncreate-eth-app\n.\nApe Frameworks\n​\nDummy Text\nethereum-lists/chains\n​\nDummy Text\nWeb3.js\n​\nDummy Text\nWeb3.py\n​\nDummy Text\nEthers.js\n​\nDummy Text\nWagmi\n​\nDummy Text\nViem\n​\nDummy Text\nWallet Connect\n​\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/libraries",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Libraries</h1></header>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"interacting-with-the-ethereum-rpc-api\"><strong>Interacting with the Ethereum RPC API</strong><a aria-label=\"Direct link to interacting-with-the-ethereum-rpc-api\" class=\"hash-link\" href=\"#interacting-with-the-ethereum-rpc-api\" title=\"Direct link to interacting-with-the-ethereum-rpc-api\">​</a></h2>\n<p>Frontends for dapps typically use JavaScript or Python to submit read or write queries to an RPC node. This code is typically referred to as the \"client side\", as web developers can roughly equate the blockchain to a backend server.</p>\n<p>A few libraries provide standard methods for submitting queries or transactions to an RPC node:</p>\n<ul>\n<li>Python:<!-- -->\n<ul>\n<li><a href=\"https://web3py.readthedocs.io/en/stable/\" rel=\"noopener noreferrer\" target=\"_blank\">web3.py</a></li>\n</ul>\n</li>\n<li>Javascript:<!-- -->\n<ul>\n<li><a href=\"https://web3js.readthedocs.io/\" rel=\"noopener noreferrer\" target=\"_blank\">web3.js</a></li>\n<li><a href=\"https://docs.ethers.org/\" rel=\"noopener noreferrer\" target=\"_blank\">ethers.js</a> To this end <a href=\"https://web3js.readthedocs.io/en/v1.10.0/getting-started.html\" rel=\"noopener noreferrer\" target=\"_blank\">Web3.js</a> and <a href=\"https://web3py.readthedocs.io/en/stable/quickstart.html\" rel=\"noopener noreferrer\" target=\"_blank\">Web3.py</a>, Java Script and Python libraries respectively, have developed to make interacting with blockchains more intuitive for web developers.</li>\n</ul>\n</li>\n</ul>\n<p>Here is a quick example for creating a frontend: <a href=\"https://github.com/PaulRBerg/create-eth-app\" rel=\"noopener noreferrer\" target=\"_blank\">create-eth-app</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ape-frameworks\">Ape Frameworks<a aria-label=\"Direct link to Ape Frameworks\" class=\"hash-link\" href=\"#ape-frameworks\" title=\"Direct link to Ape Frameworks\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ethereum-listschains\">ethereum-lists/chains<a aria-label=\"Direct link to ethereum-lists/chains\" class=\"hash-link\" href=\"#ethereum-listschains\" title=\"Direct link to ethereum-lists/chains\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"web3js\">Web3.js<a aria-label=\"Direct link to Web3.js\" class=\"hash-link\" href=\"#web3js\" title=\"Direct link to Web3.js\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"web3py\">Web3.py<a aria-label=\"Direct link to Web3.py\" class=\"hash-link\" href=\"#web3py\" title=\"Direct link to Web3.py\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ethersjs\">Ethers.js<a aria-label=\"Direct link to Ethers.js\" class=\"hash-link\" href=\"#ethersjs\" title=\"Direct link to Ethers.js\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"wagmi\">Wagmi<a aria-label=\"Direct link to Wagmi\" class=\"hash-link\" href=\"#wagmi\" title=\"Direct link to Wagmi\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"viem\">Viem<a aria-label=\"Direct link to Viem\" class=\"hash-link\" href=\"#viem\" title=\"Direct link to Viem\">​</a></h2>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"wallet-connect\">Wallet Connect<a aria-label=\"Direct link to Wallet Connect\" class=\"hash-link\" href=\"#wallet-connect\" title=\"Direct link to Wallet Connect\">​</a></h2>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/libraries.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/libraries"
    },
    "Local Nodes": {
      "content": "Local Nodes\nDevelopers often find it helpful to be able to run a 1-node Ethereum network with modified parameters to test interaction with the blockchain:\nAnvil\nis a local Ethereum node packaged in the Foundry toolkit\nHardhat Network\nis a local Ethereum node packaged in the Hardhat toolkit\nInstallation is most easily done as part of installing the respective toolkit, described in the next section.\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/local-nodes",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Local Nodes</h1></header>\n<p>Developers often find it helpful to be able to run a 1-node Ethereum network with modified parameters to test interaction with the blockchain:</p>\n<ul>\n<li><a href=\"https://github.com/foundry-rs/foundry/tree/master/crates/anvil\" rel=\"noopener noreferrer\" target=\"_blank\">Anvil</a> is a local Ethereum node packaged in the Foundry toolkit</li>\n<li><a href=\"https://hardhat.org/hardhat-network/docs/overview\" rel=\"noopener noreferrer\" target=\"_blank\">Hardhat Network</a> is a local Ethereum node packaged in the Hardhat toolkit</li>\n</ul>\n<p>Installation is most easily done as part of installing the respective toolkit, described in the next section.</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/local-nodes.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/local-nodes"
    },
    "Multi Signatures": {
      "content": "Multi Signatures\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/multi-sigs",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Multi Signatures</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/multi-sigs.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/multi-sigs"
    },
    "Node Providers": {
      "content": "On this page\nNode Providers\nDummy Text\nNode serving archive data\n​\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/node-providers",
      "html": "<article><div class=\"tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo\"><button class=\"clean-btn tocCollapsibleButton_TO0P\" type=\"button\">On this page</button></div><div class=\"theme-doc-markdown markdown\"><header><h1>Node Providers</h1></header>\n<p>Dummy Text</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"node-serving-archive-data\">Node serving archive data<a aria-label=\"Direct link to Node serving archive data\" class=\"hash-link\" href=\"#node-serving-archive-data\" title=\"Direct link to Node serving archive data\">​</a></h2></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/node-providers.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/node-providers"
    },
    "Oracles": {
      "content": "Oracles\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/oracles",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Oracles</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/oracles.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/oracles"
    },
    "Security": {
      "content": "Security\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/security",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Security</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/security.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/security"
    },
    "Social Login": {
      "content": "Social Login\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/social-login",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Social Login</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/social-login.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/social-login"
    },
    "Toolkits": {
      "content": "Toolkits\nDevelopers often find it helpful to build their project in the context of a broader framework that organizes external dependencies (i.e. package management), organizes unit and integration tests, defines a deployment procedure (against local nodes, testnet, and mainnet), records gas costs, etc.\nHere are the two most popular toolkits for Solidity development:\nFoundry\nis a Solidity framework for both development and testing. Foundry manages your dependencies, compiles your project, runs tests, deploys, and lets you interact with the chain from the command-line and via Solidity scripts. Foundry users typically write their smart contracts and tests in the Solidity language.\nHardhat\nis a Solidity development framework paired with a JavaScript testing framework. It allows for similar functionality as Foundry, and was the dominant toolchain for EVM developers prior to Foundry.\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/toolkits",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Toolkits</h1></header>\n<p>Developers often find it helpful to build their project in the context of a broader framework that organizes external dependencies (i.e. package management), organizes unit and integration tests, defines a deployment procedure (against local nodes, testnet, and mainnet), records gas costs, etc.</p>\n<p>Here are the two most popular toolkits for Solidity development:</p>\n<ul>\n<li><a href=\"https://book.getfoundry.sh/\" rel=\"noopener noreferrer\" target=\"_blank\">Foundry</a> is a Solidity framework for both development and testing. Foundry manages your dependencies, compiles your project, runs tests, deploys, and lets you interact with the chain from the command-line and via Solidity scripts. Foundry users typically write their smart contracts and tests in the Solidity language.</li>\n<li><a href=\"https://hardhat.org/docs\" rel=\"noopener noreferrer\" target=\"_blank\">Hardhat</a> is a Solidity development framework paired with a JavaScript testing framework. It allows for similar functionality as Foundry, and was the dominant toolchain for EVM developers prior to Foundry.</li>\n</ul></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/toolkits.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/toolkits"
    },
    "Wallets": {
      "content": "Wallets\nDummy Text\nEdit this page",
      "url": "https://docs.monad.xyz/tooling-and-infra/wallets",
      "html": "<article><div class=\"theme-doc-markdown markdown\"><header><h1>Wallets</h1></header>\n<p>Dummy Text</p></div><footer class=\"theme-doc-footer docusaurus-mt-lg\"><div class=\"row margin-top--sm theme-doc-footer-edit-meta-row\"><div class=\"col\"><a class=\"theme-edit-this-page\" href=\"https://github.com/monad-crypto/monad-docs/blob/main/docs/tooling-and-infra/wallets.md\" rel=\"noopener noreferrer\" target=\"_blank\"><svg aria-hidden=\"true\" class=\"iconEdit_Z9Sw\" fill=\"currentColor\" height=\"20\" viewbox=\"0 0 40 40\" width=\"20\"><g><path d=\"m34.5 11.7l-3 3.1-6.3-6.3 3.1-3q0.5-0.5 1.2-0.5t1.1 0.5l3.9 3.9q0.5 0.4 0.5 1.1t-0.5 1.2z m-29.5 17.1l18.4-18.5 6.3 6.3-18.4 18.4h-6.3v-6.2z\"></path></g></svg>Edit this page</a></div><div class=\"col lastUpdated_JAkA\"></div></div></footer></article>",
      "path": "tooling-and-infra/wallets"
    }
  }
}